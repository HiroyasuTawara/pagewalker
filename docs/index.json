[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/browser/electron/electron_finder_extention.js",
    "content": "const fs = require(\"fs\");\nconst path = require(\"path\");\nconst Finder = require(\"../../page/finder\");\n\nclass ElectronFinderExtention extends Finder {\n\n  /**\n   * Attach the file given with filePath.\n   * Rather than setting it to the files attribute of the specified input element,\n   * set it as the data-file-object attribute of the input element.\n   * This is because the files attribute can not be rewritten by script\n   * @param {string} filePath - Specify the path of the file to be attached\n   * @param {object} options\n   * @param {object} options.fileType - type attribute of the File (see HTML5 File API)\n   * @param {object} options.replaceSubmitWithAjax - whether replace form-submit with ajax request, default is true.\n   * @return {Promise}\n   */\n  attachFile(filePath, options = {}){\n    const fileType = options.fileType || \"\";\n    options.replaceSubmitWithAjax = options.replaceSubmitWithAjax || true;\n\n    return (options.replaceSubmitWithAjax ? this.clone().replaceSubmitWithAjax() : Promise.resove())\n    .then(()=>{\n      return this.executeJs(`(elements)=>{\n        const input = elements[0];\n        browserSocket.once('file-body-transfer', (event, data)=>{\n          input.attributes[\"data-file-object\"] = new File([data], '${path.basename(filePath)}', { type: \"${fileType}\" });\n          browserSocket.send('file-body-transfer-end', 'done');\n        });\n      }`);\n    })\n    .then(()=>{\n      let data = fs.readFileSync(filePath);\n      return this.page.waitForBrowserSocket('file-body-transfer-end', ()=>{\n        this.page.browserPage.nativeObject.send('file-body-transfer', data);\n      })\n    });\n  }\n  /**\n   * Replace the behavior when form is submitted with ajax. And The behavior is below,\n   * Send the request by including the File object specified in the data-file-object attribute of\n   * the input element of type=file in the form.\n   * When submit request get response 200:OK, call onSuccess callback with response object,\n   * by default replace document.body by response.text() and message send with browserSocket on channel 'submit-ajax-done'.\n   * When submit request get response 302:Redirect, call onRedirect callback with response object,\n   * by default load the page of response.url, and pageLoaded event occur.\n   * When submit request get response neither 200:OK or 302:Redirect, call onRespoinse callback with response object,\n   * by default throw Error\n   * @param {object} callbacks - An object with callback with each attribute name\n   * @param {function,string} callbacks.onSuccess - callback function for handling response when status 200.\n   * @param {function,string} callbacks.onRedirect - callback function for handling response when status 302.\n   * @param {function,string} callbacks.onResponse - callback function for handling response when status is not 200 and 302.\n   * @return {Promise}\n   */\n  replaceSubmitWithAjax(callbacks = {}){\n    const callbacksDefault = {\n      onSuccess: (response)=>{ response.text().then((text)=>{ document.body.innerHTML = text; browserSocket.send('submit-ajax-done', 'done'); }) },\n      onRedirect: (response)=>{ window.location.href = response.url },\n      onResponse: (response)=>{ throw new Error(response.status + \" \" + response.statusText) }\n    };\n    callbacks.onSuccess  = callbacks.onSuccess  || callbacksDefault.onSuccess;\n    callbacks.onRedirect = callbacks.onRedirect || callbacksDefault.onRedirect;\n    callbacks.onResponse = callbacks.onResponse || callbacksDefault.onResponse;\n\n    return this.executeJs(`(elements)=>{\n        let searchTag = (el, tag)=>{ return el == null || el.tagName == tag ? el : searchTag(el.parentElement, tag) };\n        let form = searchTag(elements[0].parentElement, \"FORM\");\n        if(!form || form.attributes[\"data-upload-file-event-listener-added\"]) return;\n\n        form.attributes[\"data-upload-file-event-listener-added\"] = true;\n        form.addEventListener('submit', (event)=>{\n          event.preventDefault();\n\n          const formData = new FormData(form);\n          for(let i = 0; i < form.elements.length; i++){\n            let input = form.elements[i];\n            if(input && input.type == \"file\" && input.attributes[\"data-file-object\"]){\n              formData.append(input.name, input.attributes[\"data-file-object\"]);\n            }\n          }\n          fetch(form.action, {\n            method: form.method, body: formData, credentials: 'same-origin',\n          })\n          .then((response)=>{\n            const callbacks = {\n              redirect: ${callbacks.onRedirect.toString()},\n              success: ${callbacks.onSuccess.toString()},\n              response: ${callbacks.onResponse.toString()}\n            }\n            switch(response.status){\n              case 200: return response.redirected ? callbacks.redirect(response) : callbacks.success(response);\n              case 302: return callbacks.redirect(response);\n              default:  return callbacks.response(response);\n            }\n          })\n        })\n      }`\n    );\n  }\n}\n\nmodule.exports = ElectronFinderExtention;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/electron/electron_finder_extention.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/browser/electron/electron_finder_extention.js",
    "static": true,
    "longname": "lib/browser/electron/electron_finder_extention.js~fs",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_finder_extention.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/browser/electron/electron_finder_extention.js",
    "static": true,
    "longname": "lib/browser/electron/electron_finder_extention.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_finder_extention.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "Finder",
    "memberof": "lib/browser/electron/electron_finder_extention.js",
    "static": true,
    "longname": "lib/browser/electron/electron_finder_extention.js~Finder",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_finder_extention.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "class",
    "name": "ElectronFinderExtention",
    "memberof": "lib/browser/electron/electron_finder_extention.js",
    "static": true,
    "longname": "lib/browser/electron/electron_finder_extention.js~ElectronFinderExtention",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/electron/electron_finder_extention.js",
    "importStyle": "ElectronFinderExtention",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "Finder"
    ]
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "attachFile",
    "memberof": "lib/browser/electron/electron_finder_extention.js~ElectronFinderExtention",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_finder_extention.js~ElectronFinderExtention#attachFile",
    "access": "public",
    "description": "Attach the file given with filePath.\nRather than setting it to the files attribute of the specified input element,\nset it as the data-file-object attribute of the input element.\nThis is because the files attribute can not be rewritten by script",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Specify the path of the file to be attached"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.fileType",
        "description": "type attribute of the File (see HTML5 File API)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.replaceSubmitWithAjax",
        "description": "whether replace form-submit with ajax request, default is true."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "replaceSubmitWithAjax",
    "memberof": "lib/browser/electron/electron_finder_extention.js~ElectronFinderExtention",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_finder_extention.js~ElectronFinderExtention#replaceSubmitWithAjax",
    "access": "public",
    "description": "Replace the behavior when form is submitted with ajax. And The behavior is below,\nSend the request by including the File object specified in the data-file-object attribute of\nthe input element of type=file in the form.\nWhen submit request get response 200:OK, call onSuccess callback with response object,\nby default replace document.body by response.text() and message send with browserSocket on channel 'submit-ajax-done'.\nWhen submit request get response 302:Redirect, call onRedirect callback with response object,\nby default load the page of response.url, and pageLoaded event occur.\nWhen submit request get response neither 200:OK or 302:Redirect, call onRespoinse callback with response object,\nby default throw Error",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "An object with callback with each attribute name"
      },
      {
        "nullable": null,
        "types": [
          "function,string"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks.onSuccess",
        "description": "callback function for handling response when status 200."
      },
      {
        "nullable": null,
        "types": [
          "function,string"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks.onRedirect",
        "description": "callback function for handling response when status 302."
      },
      {
        "nullable": null,
        "types": [
          "function,string"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks.onResponse",
        "description": "callback function for handling response when status is not 200 and 302."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "lib/browser/electron/electron_page.js",
    "content": "const path = require('path');\nconst {ipcMain} = require('electron');\nconst BrowserPage = require(\"../interface/browser_page\");\nconst BrowserSocket = require(\"../interface/browser_socket\");\nconst ElectronFinderExtention = require(\"./electron_finder_extention\");\nconst {config} = require(\"../../utils/config\");\nconst DateFormat = require('../../utils/date_format');\n\nconst TIMEOUT_MSEC = config.mocha.timeout;\n\nclass ElectronPage extends BrowserPage {\n  constructor(window){\n    super();\n    this._window = window;\n\n    this._window.on('ready', ()=>{\n      this.nativeObject.on('new-window', (event, url, frameName)=>{\n        this.emit(BrowserPage.Events.NewWindow, frameName);\n      })\n    })\n  }\n  get window(){\n    return this._window;\n  }\n  get nativeObject(){\n    return this._window.browserWindow.webContents;\n  }\n  on(eventName, callback){\n    this._addEventListener(eventName, callback, fasle)\n  }\n  once(eventName, callback){\n    this._addEventListener(eventName, callback, true)\n  }\n  _addEventListener(eventName, callback, once = true){\n    if(eventName in ElectronPage.EventMappings){\n      this.nativeObject[once ? 'once' : 'on'](ElectronPage.EventMappings[eventName], callback)\n    }else{\n      super[once ? 'once' : 'on'](evnetName, callback)\n    }\n  }\n  removeAllListeners(eventName){\n    if(eventName in ElectronPage.EventMappings){\n      this.nativeObject.removeAllListeners(ElectronPage.EventMappings[eventName])\n    }else{\n      super.removeAllListeners(eventName);\n    }\n  }\n  get socket(){\n    this._socket = this._socket || new ElectronSocket();\n    return this._socket;\n  }\n  get FinderClass(){\n    return ElectronFinderExtention;\n  }\n  loadURL(url, options = {}){\n    return this.nativeObject.loadURL(url)\n  }\n  getURL(){\n    return this.nativeObject.getURL();\n  }\n  executeJavaScript(code, ...args){\n    return this.nativeObject.executeJavaScript(code, ...args);\n  }\n  openDevTools(){\n    return this.nativeObject.openDevTools();\n  }\n  waitForDownload(action, options){\n    return new Promise((resolve, reject)=>{\n      let timeoutId = setTimeout(()=>{ reject(new Error('timeout')) }, TIMEOUT_MSEC);\n\n      this.nativeObject.session.once('will-download', (event, item, webContents) => {\n        const result = { filename: item.getFilename() };\n        // Set the save path, making Electron not to prompt a save dialog.\n        const saveFilename = `${DateFormat.toTimepstampString(new Date())}_${item.getFilename()}`;\n        result.savedFilePath = path.resolve(path.join(config.fileDownloadDir, saveFilename));\n\n        item.setSavePath(result.savedFilePath);\n        item.on('updated', (event, state)=>{\n          if(state === 'interrupted') reject(new Error('Download is interrupted'));\n        })\n        item.once('done', (event, state) => {\n          clearTimeout(timeoutId);\n          if(state == 'completed'){\n            resolve(result)\n          }else{\n            reject(new Error(`Download failed: ${state}`))\n          }\n        })\n      })\n      action();\n    });\n  }\n  waitForConfirm(action, message = undefined, isClickOK = false){\n    return new Promise((resolve, reject)=>{\n      const channel = 'confirm-synchronous';\n      let timeoutId = setTimeout(()=>{ reject(new Error('timeout')) }, TIMEOUT_MSEC);\n      this.socket.once(channel, (arg, event)=>{\n        clearTimeout(timeoutId);\n        if(message && message != arg){\n          return reject(new Error(`expected message is \"${message}\", but actual is \"${arg}\"`));\n        }\n        event.returnValue = isClickOK;\n        resolve(message);\n      });\n      return this.executeJavaScript(`{\n        let __original_confirm = window.confirm;\n        window.confirm = function(message){\n          var ret = browserSocket.sendSync('${channel}', message);\n          window.confirm = __original_confirm;\n          return ret;\n        };\n      }`, true)\n      .then(()=>{ return action && action() })\n      .catch(reject)\n    });\n  }\n}\n\nclass ElectronSocket extends BrowserSocket {\n  on(channel, callback){\n    return ipcMain.on(channel, (event, arg)=>{ callback(arg, event) });\n  }\n  once(channel, callback){\n    return ipcMain.once(channel, (event, arg)=>{ callback(arg, event) });\n  }\n  removeAllListeners(channel){\n    return ipcMain.removeAllListeners(channel);\n  }\n  send(channel, ...args){ throw new Error(\"Not Implemented\") }\n}\n\nElectronPage.EventMappings = {\n  [BrowserPage.Events.Load]: 'did-finish-load',\n  [BrowserPage.Events.LoadError]: 'did-fail-load',\n}\n\nmodule.exports = ElectronPage;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/electron/electron_page.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "ipcMain",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~ipcMain",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "BrowserPage",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~BrowserPage",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "BrowserSocket",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~BrowserSocket",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "ElectronFinderExtention",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~ElectronFinderExtention",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~config",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "DateFormat",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~DateFormat",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "TIMEOUT_MSEC",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~TIMEOUT_MSEC",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "ElectronSocket",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~ElectronSocket",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "interface": false,
    "extends": [
      "BrowserSocket"
    ],
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "on",
    "memberof": "lib/browser/electron/electron_page.js~ElectronSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronSocket#on",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "once",
    "memberof": "lib/browser/electron/electron_page.js~ElectronSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronSocket#once",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "removeAllListeners",
    "memberof": "lib/browser/electron/electron_page.js~ElectronSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronSocket#removeAllListeners",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "send",
    "memberof": "lib/browser/electron/electron_page.js~ElectronSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronSocket#send",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "ElectronPage",
    "memberof": "lib/browser/electron/electron_page.js",
    "static": true,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/electron/electron_page.js",
    "importStyle": "ElectronPage",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "BrowserPage"
    ]
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "_window",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#_window",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "get",
    "name": "window",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#window",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "get",
    "name": "nativeObject",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#nativeObject",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "on",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#on",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "once",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#once",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "_addEventListener",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#_addEventListener",
    "access": "private",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "once",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "removeAllListeners",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#removeAllListeners",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "socket",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#socket",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "_socket",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#_socket",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "get",
    "name": "FinderClass",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#FinderClass",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "loadURL",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#loadURL",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "getURL",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#getURL",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "executeJavaScript",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#executeJavaScript",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "openDevTools",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#openDevTools",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "waitForDownload",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#waitForDownload",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "waitForConfirm",
    "memberof": "lib/browser/electron/electron_page.js~ElectronPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/electron_page.js~ElectronPage#waitForConfirm",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      },
      {
        "name": "isClickOK",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "lib/browser/electron/index.js",
    "content": "const electron = require('electron');\nconst {BrowserWindow} = electron;\nconst Browser = require('../interface/browser');\nconst ElectronPage = require('./electron_page');\n\nclass ElectronBrowser extends Browser {\n  constructor(options){\n    super();\n    this._app = electron.app;\n    this._app.on('window-all-closed', ()=>{ this._app.quit() });\n    this._app.on('ready', (...args)=>{ this.emit(Browser.Events.Ready, ...args) });\n  }\n  isReady(){\n    return this._app.isReady();\n  }\n  exit(...args){\n    return this._app.exit(...args)\n  }\n  /**\n   * @return {Promise<object>} - object is browserWindow object provided by each browser.\n   */\n  createBrowserWindow(windowOptions, callbacks){\n    const browserWindow = new BrowserWindow(windowOptions);\n\n    browserWindow.webContents.on('context-menu', (e, params)=>{\n      browserWindow.webContents.inspectElement(params.x, params.y);\n    })\n    browserWindow.webContents.on('new-window', (event, url, frameName, disposition, options, additionalFeatures)=>{\n      event.preventDefault();\n      let newWindow = callbacks['new-window'](frameName, undefined, options);\n      if(url && url != \"about:blank\"){\n        newWindow.page.load(url)\n      }\n      event.newGuest = newWindow.browserWindow\n    })\n    const browserWindowId = browserWindow.id; // on closed event, browserWindow object has been destroyed, so could not get \"id\";\n    browserWindow.on('closed', (event)=>{\n      callbacks['closed'](browserWindowId);\n    });\n    return Promise.resolve({ id: browserWindow.id, browserWindow: browserWindow });\n  }\n  /**\n   * Get a browserWindow object by id if browserWindow given the id exist.\n   * @return {Promise<object>} - object is browserWindow object provided by each browser.\n   */\n  getBrowserWindowById(id){\n    return Promise.resolve(id && BrowserWindow.fromId(parseInt(id)));\n  }\n\n  createBrowserPage(window){\n    return new ElectronPage(window);\n  }\n}\n\nmodule.exports = ElectronBrowser;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/electron/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "electron",
    "memberof": "lib/browser/electron/index.js",
    "static": true,
    "longname": "lib/browser/electron/index.js~electron",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "BrowserWindow",
    "memberof": "lib/browser/electron/index.js",
    "static": true,
    "longname": "lib/browser/electron/index.js~BrowserWindow",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "Browser",
    "memberof": "lib/browser/electron/index.js",
    "static": true,
    "longname": "lib/browser/electron/index.js~Browser",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "ElectronPage",
    "memberof": "lib/browser/electron/index.js",
    "static": true,
    "longname": "lib/browser/electron/index.js~ElectronPage",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/electron/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "ElectronBrowser",
    "memberof": "lib/browser/electron/index.js",
    "static": true,
    "longname": "lib/browser/electron/index.js~ElectronBrowser",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/electron/index.js",
    "importStyle": "ElectronBrowser",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "Browser"
    ]
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "_app",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#_app",
    "access": "private",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "isReady",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#isReady",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "exit",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#exit",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "createBrowserWindow",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#createBrowserWindow",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "object is browserWindow object provided by each browser."
    },
    "params": [
      {
        "name": "windowOptions",
        "types": [
          "*"
        ]
      },
      {
        "name": "callbacks",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "getBrowserWindowById",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#getBrowserWindowById",
    "access": "public",
    "description": "Get a browserWindow object by id if browserWindow given the id exist.",
    "lineNumber": 46,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "object is browserWindow object provided by each browser."
    },
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "createBrowserPage",
    "memberof": "lib/browser/electron/index.js~ElectronBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/electron/index.js~ElectronBrowser#createBrowserPage",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "window",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "lib/browser/electron/window_preloaded.js",
    "content": "window.nodeRequire = require;\nwindow.browserSocket = require('electron').ipcRenderer;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/electron/window_preloaded.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "lib/browser/interface/browser.js",
    "content": "const EventEmitter = require('events');\n\nclass Browser extends EventEmitter {\n\n  isReady(){ throw new Error(\"Not Implemented.\") }\n  exit(...args){ throw new Error(\"Not Implemented.\") }\n  /**\n   * @return {Promise<object>} - object is browserWindow object provided by each browser.\n   */\n  createBrowserWindow(config, callbacks){ throw new Error(\"Not Implemented.\") }\n  /**\n   * Get a browserWindow object by id if browserWindow given the id exist.\n   * @return {Promise<object>} - object is browserWindow object provided by each browser.\n   */\n  getBrowserWindowById(id){ throw new Error(\"Not Implemented.\") }\n  /**\n   * @return {BrowserPage}\n   */\n  createBrowserPage(window){ throw new Error(\"Not Implemented.\") }\n}\n\nBrowser.Events = {\n  Ready: 'ready',\n}\n\nmodule.exports = Browser;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/interface/browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "lib/browser/interface/browser.js",
    "static": true,
    "longname": "lib/browser/interface/browser.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/interface/browser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "class",
    "name": "Browser",
    "memberof": "lib/browser/interface/browser.js",
    "static": true,
    "longname": "lib/browser/interface/browser.js~Browser",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/interface/browser.js",
    "importStyle": "Browser",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "isReady",
    "memberof": "lib/browser/interface/browser.js~Browser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser.js~Browser#isReady",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "exit",
    "memberof": "lib/browser/interface/browser.js~Browser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser.js~Browser#exit",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "createBrowserWindow",
    "memberof": "lib/browser/interface/browser.js~Browser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser.js~Browser#createBrowserWindow",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "object is browserWindow object provided by each browser."
    },
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "callbacks",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "getBrowserWindowById",
    "memberof": "lib/browser/interface/browser.js~Browser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser.js~Browser#getBrowserWindowById",
    "access": "public",
    "description": "Get a browserWindow object by id if browserWindow given the id exist.",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "object is browserWindow object provided by each browser."
    },
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "createBrowserPage",
    "memberof": "lib/browser/interface/browser.js~Browser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser.js~Browser#createBrowserPage",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "BrowserPage"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "window",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "lib/browser/interface/browser_page.js",
    "content": "const EventEmitter = require('events');\n\nclass BrowserPage extends EventEmitter {\n  /**\n   * @return {Window}\n   */\n  get window(){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {object}\n   */\n  get nativeObject(){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {BrowserSocket}\n   */\n  get socket(){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {Finder}\n   */\n  get FinderClass(){\n    return require(\"../../page/finder\");\n  }\n  /**\n   * @return {Promise<BrowserPage>}\n   */\n  loadURL(url, options = {}){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {string}\n   */\n  getURL(){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {Promise<string|number|boolean>}\n   */\n  executeJavaScript(code, ...args){ throw new Error(\"Not Implemented\") }\n  /**\n   * show developer tool\n   */\n  openDevTools(){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {Promise<object>}\n   */\n  waitForDownload(action, options){ throw new Error(\"Not Implemented\") }\n  /**\n   * @return {Promise<string>} resolved by confirm message\n   */\n  waitForConfirm(action, message, isClickOK){ throw new Error(\"Not Implemented\") }\n}\n\nBrowserPage.Events = {\n  Load: 'load',\n  LoadError: 'load-error',\n  Download: 'download',\n  NewWindow: 'new-window',\n  Confirm: 'confirm',\n  Alert: 'alert',\n  AjaxDone: 'ajax-done',\n  browserSocket: 'browser-socket',\n}\nmodule.exports = BrowserPage;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/interface/browser_page.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "lib/browser/interface/browser_page.js",
    "static": true,
    "longname": "lib/browser/interface/browser_page.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/interface/browser_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "BrowserPage",
    "memberof": "lib/browser/interface/browser_page.js",
    "static": true,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/interface/browser_page.js",
    "importStyle": "BrowserPage",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 112,
    "kind": "get",
    "name": "window",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#window",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "return": {
      "nullable": null,
      "types": [
        "Window"
      ],
      "spread": false,
      "description": ""
    },
    "type": null
  },
  {
    "__docId__": 113,
    "kind": "get",
    "name": "nativeObject",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#nativeObject",
    "access": "public",
    "description": "",
    "lineNumber": 11,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": null
  },
  {
    "__docId__": 114,
    "kind": "get",
    "name": "socket",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#socket",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "BrowserSocket"
      ],
      "spread": false,
      "description": ""
    },
    "type": null
  },
  {
    "__docId__": 115,
    "kind": "get",
    "name": "FinderClass",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#FinderClass",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "loadURL",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#loadURL",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "return": {
      "nullable": null,
      "types": [
        "Promise<BrowserPage>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "getURL",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#getURL",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "executeJavaScript",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#executeJavaScript",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "return": {
      "nullable": null,
      "types": [
        "Promise<string|number|boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "openDevTools",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#openDevTools",
    "access": "public",
    "description": "show developer tool",
    "lineNumber": 37,
    "params": [],
    "return": null
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "waitForDownload",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#waitForDownload",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "waitForConfirm",
    "memberof": "lib/browser/interface/browser_page.js~BrowserPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_page.js~BrowserPage#waitForConfirm",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": "resolved by confirm message"
    },
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "isClickOK",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "lib/browser/interface/browser_socket.js",
    "content": "\nclass BrowserSocket {\n  on(channel, callback){ throw new Error(\"Not Implemented\") }\n  once(channel, callback){ throw new Error(\"Not Implemented\") }\n  send(channel, ...args){ throw new Error(\"Not Implemented\") }\n  removeAllListeners(channel){ throw new Error(\"Not Implemented\") }\n}\n\nmodule.exports = BrowserSocket;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/interface/browser_socket.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "BrowserSocket",
    "memberof": "lib/browser/interface/browser_socket.js",
    "static": true,
    "longname": "lib/browser/interface/browser_socket.js~BrowserSocket",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/interface/browser_socket.js",
    "importStyle": "BrowserSocket",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "on",
    "memberof": "lib/browser/interface/browser_socket.js~BrowserSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_socket.js~BrowserSocket#on",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "once",
    "memberof": "lib/browser/interface/browser_socket.js~BrowserSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_socket.js~BrowserSocket#once",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "send",
    "memberof": "lib/browser/interface/browser_socket.js~BrowserSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_socket.js~BrowserSocket#send",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "removeAllListeners",
    "memberof": "lib/browser/interface/browser_socket.js~BrowserSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/interface/browser_socket.js~BrowserSocket#removeAllListeners",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "lib/browser/puppeteer/index.js",
    "content": "const puppeteer = require('puppeteer');\nconst Browser = require('../interface/browser');\nconst PuppeteerPage = require('./puppeteer_page');\n\nclass PuppeteerBrowser extends Browser {\n  constructor(options = {}){\n    super();\n    puppeteer.launch(options).then((browser)=>{\n      this._browser = browser;\n      this.emit(Browser.Events.Ready);\n    })\n    this.on(Browser.Events.Ready, ()=>{ this._ready = true });\n  }\n  isReady(){\n    return !!this._ready;\n  }\n  exit(...args){\n    this._browser && this._browser.close();\n    process.exit(...args);\n  }\n  createBrowserWindow(windowOptions, callbacks){\n    return new Promise((resolve, reject)=>{\n      if(this.isReady()){\n        this._browser.newPage().then(resolve);\n      }\n      this.on(Browser.Events.Ready, ()=>{\n        this._browser.newPage().then(resolve);\n      })\n    })\n    .then((browserPage)=>{\n      this._browserPage = browserPage;\n      this._browser.on('targetcreated', (target)=>{\n        if(target.type() != 'page') return;\n        target.page().then((page)=>{\n          return page.evaluate(()=>{ return window.name })\n        })\n        .then((frameName)=>{\n          callbacks['new-window'](frameName, target._targetInfo.targetId, {});\n        })\n      })\n      this._browser.on('targetdestroyed', (target)=>{\n        if(target.type() != 'page') return;\n        callbacks['closed'](target._targetInfo.targetId)\n      })\n      return { id: browserPage._client.targetId(), browserWindow: browserPage };\n    })\n  }\n  /**\n   * Get a browserWindow object by id if browserWindow given the id exist.\n   * @return {Promise<object>} - object is browserWindow object provided by each browser.\n   */\n  getBrowserWindowById(id){\n    if(id && this._browser){\n      return this._browser.pages()\n      .then((pages)=>{\n        return pages.filter(page => page._client.targetId() == id)[0];\n      })\n    }else{\n      return Promise.resolve()\n    }\n  }\n  createBrowserPage(window){\n    return new PuppeteerPage(window);\n  }\n}\n\nmodule.exports = PuppeteerBrowser;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/puppeteer/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "puppeteer",
    "memberof": "lib/browser/puppeteer/index.js",
    "static": true,
    "longname": "lib/browser/puppeteer/index.js~puppeteer",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "Browser",
    "memberof": "lib/browser/puppeteer/index.js",
    "static": true,
    "longname": "lib/browser/puppeteer/index.js~Browser",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "PuppeteerPage",
    "memberof": "lib/browser/puppeteer/index.js",
    "static": true,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerPage",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "class",
    "name": "PuppeteerBrowser",
    "memberof": "lib/browser/puppeteer/index.js",
    "static": true,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/puppeteer/index.js",
    "importStyle": "PuppeteerBrowser",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "Browser"
    ]
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "_browser",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#_browser",
    "access": "private",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "_ready",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#_ready",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "isReady",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#isReady",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "exit",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#exit",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "createBrowserWindow",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#createBrowserWindow",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "windowOptions",
        "types": [
          "*"
        ]
      },
      {
        "name": "callbacks",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "_browserPage",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#_browserPage",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "getBrowserWindowById",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#getBrowserWindowById",
    "access": "public",
    "description": "Get a browserWindow object by id if browserWindow given the id exist.",
    "lineNumber": 52,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "object is browserWindow object provided by each browser."
    },
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "createBrowserPage",
    "memberof": "lib/browser/puppeteer/index.js~PuppeteerBrowser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/index.js~PuppeteerBrowser#createBrowserPage",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "window",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "lib/browser/puppeteer/puppeteer_finder_extention.js",
    "content": "const fs = require(\"fs\");\nconst path = require(\"path\");\nconst Finder = require(\"../../page/finder\");\n\nclass PuppeteerFinderExtention extends Finder {\n\n  /**\n   * Attach the file given with filePath.\n   * Now, it is not supported that you attach a file to input-elements in iframe .\n   * @param {string} filePath - Specify the path of the file to be attached\n   * @param {object} options\n   * @return {Promise}\n   */\n  attachFile(filePath, options = {}){\n    const firstSelector = this.conditions[0].constructor.name == \"Selector\" ? this.conditions[0].selector : \"*\";\n\n    return this.page.browserPage.nativeObject.$$(firstSelector)\n    .then((elementHandles)=>{\n      return this.conditions.reduce((prev, condition, i)=>{\n        return prev.then((elementHandles)=>{\n          if(condition.constructor.name == \"Selector\"){\n            return i == 0 ? elementHandles : elementHandles.$$(condition.selector);\n          }\n          if(condition.constructor.name == \"Filter\"){\n            return elementHandles.filter(eval(condition.code))\n          }\n        })\n      }, Promise.resolve(elementHandles));\n    })\n    .then((elementHandles)=>{\n      if(elementHandles.length == 0) return;//throw new Error('input element to attach file is not found')\n\n      return elementHandles[0].uploadFile(filePath);\n    })\n  }\n}\n\nmodule.exports = PuppeteerFinderExtention;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/puppeteer/puppeteer_finder_extention.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/browser/puppeteer/puppeteer_finder_extention.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_finder_extention.js~fs",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_finder_extention.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/browser/puppeteer/puppeteer_finder_extention.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_finder_extention.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_finder_extention.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "Finder",
    "memberof": "lib/browser/puppeteer/puppeteer_finder_extention.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_finder_extention.js~Finder",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_finder_extention.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "PuppeteerFinderExtention",
    "memberof": "lib/browser/puppeteer/puppeteer_finder_extention.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_finder_extention.js~PuppeteerFinderExtention",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_finder_extention.js",
    "importStyle": "PuppeteerFinderExtention",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "Finder"
    ]
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "attachFile",
    "memberof": "lib/browser/puppeteer/puppeteer_finder_extention.js~PuppeteerFinderExtention",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_finder_extention.js~PuppeteerFinderExtention#attachFile",
    "access": "public",
    "description": "Attach the file given with filePath.\nNow, it is not supported that you attach a file to input-elements in iframe .",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Specify the path of the file to be attached"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "lib/browser/puppeteer/puppeteer_page.js",
    "content": "const path = require('path');\nconst fs = require('fs');\nconst EventEmitter = require('events');\nconst BrowserPage = require(\"../interface/browser_page\");\nconst BrowserSocket = require(\"../interface/browser_socket\");\nconst PuppeteerFinderExtention = require(\"./puppeteer_finder_extention\");\nconst {config} = require(\"../../utils/config\");\nconst DateFormat = require('../../utils/date_format');\n\nconst TIMEOUT_MSEC = config.mocha.timeout;\nconst DOWNLOAD_PATH = path.resolve(config.fileDownloadDir);\n\nclass PuppeteerPage extends BrowserPage {\n  constructor(window){\n    super();\n    this._window = window;\n    const browserSocket = this._browserSocket = new PuppeteerSocket();\n\n    this._window.on('ready', ()=>{\n      this.nativeObject.exposeFunction('invokeBrowserSocket', (...args)=>{\n        const argArray = JSON.parse(args.join(\"\"))\n        return browserSocket[argArray[0]](...(argArray.slice(1)));\n      })\n      this.nativeObject.evaluateOnNewDocument(()=>{\n        window.browserSocket = {\n          on: (...args)=>{ window.invokeBrowserSocket('on', ...args) },\n          once: (...args)=>{ window.invokeBrowserSocket('once', ...args) },\n          removeAllListeners: (...args)=>{ window.invokeBrowserSocket('removeAllListeners', ...args) },\n          send: (...args)=>{ window.invokeBrowserSocket('send', ...args) },\n        }\n      });\n      this._setDownloadPath(DOWNLOAD_PATH);\n    })\n  }\n  on(eventName, callback){\n    this._addEventListener(eventName, callback, fasle)\n  }\n  once(eventName, callback){\n    this._addEventListener(eventName, callback, true)\n  }\n  _addEventListener(eventName, callback, once = true){\n    if(eventName in PuppeteerPage.EventMappings){\n      this.nativeObject[once ? 'once' : 'on'](PuppeteerPage.EventMappings[eventName], callback)\n    }else{\n      super[once ? 'once' : 'on'](evnetName, callback)\n    }\n  }\n  removeAllListeners(eventName){\n    if(eventName in PuppeteerPage.EventMappings){\n      this.nativeObject.removeAllListeners(PuppeteerPage.EventMappings[eventName])\n    }else{\n      super.removeAllListeners(eventName);\n    }\n  }\n  /**\n   * @return {Window}\n   */\n  get window(){\n    return this._window;\n  }\n  /**\n   * @return {object}\n   */\n  get nativeObject(){\n    return this._window.browserWindow;\n  }\n  /**\n   * @return {BrowserSocket}\n   */\n  get socket(){\n    return this._browserSocket;\n  }\n  /**\n   * @return {Finder}\n   */\n  get FinderClass(){\n    return PuppeteerFinderExtention;\n  }\n  /**\n   * @return {Promise<BrowserPage>}\n   */\n  loadURL(url, options = {}){\n    return this.nativeObject.goto(url);\n  }\n  /**\n   * @return {string}\n   */\n  getURL(){\n    return this.nativeObject.url();\n  }\n  /**\n   * @return {Promise<string|number|boolean>}\n   */\n  executeJavaScript(code, ...args){\n    return this.nativeObject.evaluate(code, ...args);\n  }\n  /**\n   * show developer tool\n   */\n  openDevTools(){ /*ignoe*/ }\n  /**\n   * @private\n   */\n  _setDownloadPath(downloadPath){\n    return this.nativeObject._client.send(\n      'Page.setDownloadBehavior', {　behavior: 'allow', downloadPath: downloadPath }\n    );\n  }\n  /**\n   * @return {Promise<object>}\n   */\n  waitForDownload(action, options){\n    const isDownloadComplete = (path)=>{\n      return new Promise((resolve, reject)=>{\n        fs.readdir(path, (err, files)=>{ err ? reject(err) : resolve(files) })\n      })\n      .then((files)=>{\n        if (files.length === 0) return false;\n        // .crdownloadがあればダウンロード中\n        const nowDownloading = Array.from(files).some(file => /.*\\.crdownload$/.test(file))\n        return !nowDownloading\n      });\n    };\n\n    const waitResponse = ()=>{\n      return new Promise((resolve, reject)=>{\n        let timeoutId = setTimeout(()=>{ reject(new Error('timeout')) }, TIMEOUT_MSEC);\n        this.nativeObject.removeAllListeners('response');\n        this.nativeObject.on('response', (response)=>{\n          let contentDisposition = response.headers[\"content-disposition\"];\n          if(contentDisposition){\n            clearTimeout(timeoutId);\n            let matched = contentDisposition.match(/filename=\\\"(.*)\\\"$/);\n            resolve(matched ? matched[1] : \"\");\n          }\n        })\n        action();\n      })\n    };\n    const downloadPath = options.downloadPath || DOWNLOAD_PATH;\n    const waitTimeSpanMs = 100;\n\n    return (options.downloadPath ? this._setDownloadPath(options.downloadPath) : Promise.resolve())\n// patch start:\n// page.on('response') do not happen in puppeteer v0.13, so check saved file.\n//    .then(waitResponse)\n//    .then((filename)=>{\n    .then(()=>{\n      return new Promise((resolve, reject)=>{\n        fs.readdir(downloadPath, (err, files)=>{ err ? reject(err) : resolve(files) })\n      })\n    })\n    .then((filenames)=>{\n      action();\n// patch end\n      return new Promise((resolve, reject)=>{\n        let totalWaitTimeMs = 0;\n        const waitAndCheck = ()=>{\n          if(totalWaitTimeMs > TIMEOUT_MSEC) return reject(new Error('timeout'));\n\n          setTimeout(()=>{\n            totalWaitTimeMs += waitTimeSpanMs;\n            isDownloadComplete(downloadPath).catch(reject).then((completed)=>{\n              if(!completed) return waitAndCheck();\n\n// patch start\n              return new Promise((resolve, reject)=>{\n                const findDownloadedFile = ()=>{\n                  fs.readdir(downloadPath, (err, files)=>{\n                    if(err) return reject(err);\n                    let filename = files.filter(file => !filenames.includes(file))[0];\n                    if(!filename) return findDownloadedFile();\n                    resolve(filename);\n                  })\n                };\n                findDownloadedFile();\n              })\n              .then((filename)=>{\n// patch end\n                resolve({ filename: filename, savedFilePath: path.resolve(path.join(downloadPath, filename)) });\n              });\n            })\n          }, waitTimeSpanMs);\n        };\n        waitAndCheck();\n      });\n    });\n  }\n\n  /**\n   * @return {Promise<string>} resolved by confirm message\n   */\n  waitForConfirm(action, message = undefined, isClickOK = false){\n    return new Promise((resolve, reject)=>{\n      let timeoutId = setTimeout(()=>{ reject(new Error('timeout')) }, TIMEOUT_MSEC);\n      this.nativeObject.once('dialog', (dialog)=>{\n        if(dialog.type != 'confirm') return;\n\n        clearTimeout(timeoutId);\n        if(message && message != dialog.message()){\n          return reject(new Error(`expected message is \"${message}\", but actual is \"${dialog.message()}\"`));\n        }\n        dialog.accept().then(resolve);\n      })\n      action();\n    })\n  }\n}\n\nclass PuppeteerSocket extends BrowserSocket {\n  constructor(){\n    super();\n    this.emitter = new EventEmitter();\n  }\n  on(channel, callback){\n    return this.emitter.on(channel, callback);\n  }\n  once(channel, callback){\n    return this.emitter.once(channel, callback);\n  }\n  removeAllListeners(channel){\n    return this.emitter.removeAllListeners(channel);\n  }\n  send(channel, ...args){\n    return this.emitter.emit(channel, ...args)\n  }\n}\n\nPuppeteerPage.EventMappings = {\n  [BrowserPage.Events.Load]: 'load',\n  [BrowserPage.Events.LoadError]: 'requestfailed',\n//  [BrowserPage.Events.NewWindow]: 'did-fail-load',\n}\n\nmodule.exports = PuppeteerPage;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~fs",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "BrowserPage",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~BrowserPage",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "BrowserSocket",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~BrowserSocket",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "PuppeteerFinderExtention",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerFinderExtention",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~config",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "DateFormat",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~DateFormat",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "TIMEOUT_MSEC",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~TIMEOUT_MSEC",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "DOWNLOAD_PATH",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~DOWNLOAD_PATH",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "class",
    "name": "PuppeteerSocket",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "interface": false,
    "extends": [
      "BrowserSocket"
    ],
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "undocument": true
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "emitter",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket#emitter",
    "access": "public",
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "on",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket#on",
    "access": "public",
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "once",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket#once",
    "access": "public",
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "removeAllListeners",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket#removeAllListeners",
    "access": "public",
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "send",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerSocket#send",
    "access": "public",
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "class",
    "name": "PuppeteerPage",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js",
    "static": true,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/browser/puppeteer/puppeteer_page.js",
    "importStyle": "PuppeteerPage",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "BrowserPage"
    ]
  },
  {
    "__docId__": 168,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "_window",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#_window",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "on",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#on",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "once",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#once",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "_addEventListener",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#_addEventListener",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "once",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "removeAllListeners",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#removeAllListeners",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "get",
    "name": "window",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#window",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "return": {
      "nullable": null,
      "types": [
        "Window"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "get",
    "name": "nativeObject",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#nativeObject",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "get",
    "name": "socket",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#socket",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "return": {
      "nullable": null,
      "types": [
        "BrowserSocket"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "get",
    "name": "FinderClass",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#FinderClass",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "loadURL",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#loadURL",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "return": {
      "nullable": null,
      "types": [
        "Promise<BrowserPage>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "getURL",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#getURL",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "executeJavaScript",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#executeJavaScript",
    "access": "public",
    "description": "",
    "lineNumber": 94,
    "return": {
      "nullable": null,
      "types": [
        "Promise<string|number|boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "openDevTools",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#openDevTools",
    "access": "public",
    "description": "show developer tool",
    "lineNumber": 100,
    "params": [],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "_setDownloadPath",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#_setDownloadPath",
    "access": "private",
    "description": "",
    "lineNumber": 104,
    "params": [
      {
        "name": "downloadPath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "waitForDownload",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#waitForDownload",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "waitForConfirm",
    "memberof": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/browser/puppeteer/puppeteer_page.js~PuppeteerPage#waitForConfirm",
    "access": "public",
    "description": "",
    "lineNumber": 193,
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": "resolved by confirm message"
    },
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      },
      {
        "name": "isClickOK",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ]
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "lib/page/finder.js",
    "content": "const FinderBase = require('./finder_base');\nconst FinderAction = require('./finder_action');\nconst FinderFilter = require('./finder_filter');\n\n/**\n * @extends {FinderBase}\n * @extends {FinderAction}\n * @extends {FinderFilter}\n */\nclass Finder extends FinderBase {\n  constructor(page, ...args){\n    super(page, ...args)\n  }\n  /**\n   * Set \"selected\" property true on option element whose textContent match the given string.\n   * This method is assumed to be called on a select element\n   * @return {Promise}\n   */\n  selectOption(content){\n    return this.find(\"option\", FinderFilter.haveContent(content.trim())).select();\n  }\n  /**\n   * Alias of \"selectOption\"\n   * @return {Promise}\n   */\n  choose(content){\n    return this.selectOption(content);\n  }\n  /**\n   * Attach the file given with filePath.\n   * This method implemented at FinderExtentions by Browser. so please read api-document of FinderExtentions you use.\n   * @param {string} filePath - Specify the path of the file to be attached\n   * @param {object} options - options given to FinderExtentions\n   * @return {Promise}\n   */\n  attachFile(filePath, options = {}){\n    throw new Error(\"not implemented\")\n  }\n  /**\n   * execute \"JavaScript code\" given as argument\n   * @return {Promise}\n   */\n  executeJs(code){\n    return this.withAction(code).evaluate();\n  }\n  /**\n   * @return {Promise} Promise which resolved with array of finder, that array length is matched number\n   */\n  toArray(){\n    return this.count()\n    .then((count)=>{\n      let array = [];\n      for(let i = 0; i < count; i++){\n        array.push(this.clone().find(`(node, idx)=>{ return idx == ${i} }`));\n      }\n      return array;\n    })\n  }\n  /**\n   * return true if all elements which is found by Finder satisfied given filter\n   * @example\n   * await page.find(\"input\").every(FinderFilter.haveValue(\"123\")) // return true or false\n   */\n  every(code){\n    let filtered = this.clone().find(code);\n    return Promise.all([ this.count(), filtered.count() ])\n    .then((beforeAndAfter)=>{ return beforeAndAfter[0] == beforeAndAfter[1] })\n  }\n\n  /**\n   * Make this finder object executed in given iframe.\n   * @param {Finder} finderForIframe - finder object for iframe\n   * @return {Finder}\n   * @example\n   *   await page.find(\"h3\").inIframe(page.find(\"iframe\").getFirst()).text()\n   */\n  inIframe(finderForIframe){\n    return this.withContext(finderForIframe.toContextString());\n  }\n  /**\n   * @private\n   */\n  toContextString(){\n    let codeToFindIframeObject = this.clone().withAction(elements => elements).toJsCode();\n    return `(()=>{ ${codeToFindIframeObject} })()[0].contentWindow`;\n  }\n  /**\n   * this is same for `page.waitForPageLoad(async ()=>{ await this.click() })`\n   */\n  clickAndWaitLoading(){\n    return this.page.waitForPageLoad(()=>{ this.click() });\n  }\n  /**\n   * this is same for `page.waitForAjaxDone(async ()=>{ await this.click() })`\n   */\n  clickAndWaitAjaxDone(){\n    return this.page.waitForAjaxDone(()=>{ this.click() });\n  }\n}\n\nfunction mixin(dest, source){\n  for(let key of Reflect.ownKeys(source)){\n    if(key === \"constructor\") continue;\n\n    let descriptor = Object.getOwnPropertyDescriptor(source, key);\n    descriptor.configurable = true;\n    descriptor.enumerable   = false;\n    if(descriptor.hasOwnProperty(\"writable\")){\n      descriptor.writable = true;\n    }\n    Object.defineProperty(dest, key, descriptor);\n  }\n}\n\nmixin(Finder.prototype, FinderAction.prototype);\nmixin(Finder.prototype, FinderFilter.prototype);\n\nmodule.exports = Finder;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page/finder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "FinderBase",
    "memberof": "lib/page/finder.js",
    "static": true,
    "longname": "lib/page/finder.js~FinderBase",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "variable",
    "name": "FinderAction",
    "memberof": "lib/page/finder.js",
    "static": true,
    "longname": "lib/page/finder.js~FinderAction",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "FinderFilter",
    "memberof": "lib/page/finder.js",
    "static": true,
    "longname": "lib/page/finder.js~FinderFilter",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "mixin",
    "memberof": "lib/page/finder.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder.js~mixin",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "class",
    "name": "Finder",
    "memberof": "lib/page/finder.js",
    "static": true,
    "longname": "lib/page/finder.js~Finder",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page/finder.js",
    "importStyle": "Finder",
    "description": "",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "FinderBase",
      "FinderAction",
      "FinderFilter"
    ]
  },
  {
    "__docId__": 191,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "selectOption",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#selectOption",
    "access": "public",
    "description": "Set \"selected\" property true on option element whose textContent match the given string.\nThis method is assumed to be called on a select element",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "choose",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#choose",
    "access": "public",
    "description": "Alias of \"selectOption\"",
    "lineNumber": 26,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "attachFile",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#attachFile",
    "access": "public",
    "description": "Attach the file given with filePath.\nThis method implemented at FinderExtentions by Browser. so please read api-document of FinderExtentions you use.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "Specify the path of the file to be attached"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "options given to FinderExtentions"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "executeJs",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#executeJs",
    "access": "public",
    "description": "execute \"JavaScript code\" given as argument",
    "lineNumber": 43,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "toArray",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#toArray",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise which resolved with array of finder, that array length is matched number"
    },
    "params": []
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "every",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#every",
    "access": "public",
    "description": "return true if all elements which is found by Finder satisfied given filter",
    "examples": [
      "await page.find(\"input\").every(FinderFilter.haveValue(\"123\")) // return true or false"
    ],
    "lineNumber": 64,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "inIframe",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#inIframe",
    "access": "public",
    "description": "Make this finder object executed in given iframe.",
    "examples": [
      "  await page.find(\"h3\").inIframe(page.find(\"iframe\").getFirst()).text()"
    ],
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Finder"
        ],
        "spread": false,
        "optional": false,
        "name": "finderForIframe",
        "description": "finder object for iframe"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "toContextString",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#toContextString",
    "access": "private",
    "description": "",
    "lineNumber": 83,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "clickAndWaitLoading",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#clickAndWaitLoading",
    "access": "public",
    "description": "this is same for `page.waitForPageLoad(async ()=>{ await this.click() })`",
    "lineNumber": 90,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "clickAndWaitAjaxDone",
    "memberof": "lib/page/finder.js~Finder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder.js~Finder#clickAndWaitAjaxDone",
    "access": "public",
    "description": "this is same for `page.waitForAjaxDone(async ()=>{ await this.click() })`",
    "lineNumber": 96,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "lib/page/finder_action.js",
    "content": "\n/**\n * This class provides action methods for Finder.\n * This class is Mixined to \"Finder\" class\n */\nclass FinderAction {\n  static get count(){\n    return (elements)=>{ return elements ? elements.length : 0 }\n  }\n  static get text(){\n    return (elements)=>{ return elements && elements[0].textContent }\n  }\n  static attribute(attrName){\n    return `(elements)=>{ return elements && elements[0].attributes[\"${attrName}\"].value }`;\n  }\n  static setText(text){\n    return `(elements)=>{ for(let i = 0; i < elements.length; i++){ elements[i].textContent = \"${text}\" } }`\n  }\n  static get value(){\n    return (elements)=>{ return elements && elements[0].value }\n  }\n  static setValue(val){\n    return `(elements)=>{ for(let i = 0; i < elements.length; i++){ elements[i].value = \"${val}\" } }`\n  }\n  static get click(){\n    return (elements)=>{\n      if(elements && elements[0]){\n        let event = document.createEvent('MouseEvent');\n        event.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        elements[0].dispatchEvent(event);\n      }\n    }\n  }\n  static setChecked(bool){\n    return `(elements)=>{ for(let i = 0; i < elements.length; i++){ elements[i].checked = ${bool}; } }`\n  }\n  static setSelected(bool){\n    return `(elements)=>{ elements && elements[0].selected = ${bool} }`\n  }\n\n  ////// instance methods //////////////////////////////////////////////////////////////////\n\n  /*\n   * Get a textContent of element which is found first by Finder.\n   * @return {Promise} Promise resolved with element.textContent\n   */\n  text(){\n    return this.withAction(FinderAction.text).evaluate()\n  }\n  /**\n   * Get a value of element which is found first by Finder.\n   * @return {Promise} Promise resolved with element.value\n   */\n  value(){\n    return this.withAction(FinderAction.value).evaluate()\n  }\n  /**\n   * Get a attribute of element which is found first by Finder.\n   * @return {Promise} Promise resolved with element.attributes[attrName].value\n   */\n  attribute(attrName){\n    return this.withAction(FinderAction.attribute(attrName)).evaluate()\n  }\n  /**\n   * Click an element which is found first by Finder\n   * @return {Promise} Promise resolved after click event\n   */\n  click(){\n    return this.withAction(FinderAction.click).evaluate()\n  }\n  /**\n   * Get a count of elements which is found by Finder.\n   * @return {Promise} Promise resolved with matched number\n   */\n  count(){\n    return this.withAction(FinderAction.count).evaluate()\n  }\n  /**\n   * @return {Promise} return true if count of elements which is found by Finder is over one.\n   */\n  exist(){\n    return this.count().then(count => count >= 1)\n  }\n  /**\n   * @return {Promise} return true if count of elements which is found by Finder is zero.\n   */\n  notExist(){\n    return this.exist().then(exist => !exist)\n  }\n  /**\n   * Set given value to value of all elements which is found by Finder\n   * @return {Promise} Promise resolved after setting value\n   */\n  setValue(val){\n    return this.withAction(FinderAction.setValue(val)).evaluate()\n  }\n  /**\n   * Alias of \"setValue\"\n   */\n  fillIn(val){\n    return this.setValue(val)\n  }\n  /**\n   * Set given text to textContent of all elements which is found by Finder\n   * @return {Promise} Promise resolved after setting textContent\n   */\n  setText(text){\n    return this.withAction(FinderAction.setText(text)).evaluate()\n  }\n  /**\n   * Set \"checked\" property true on all elements which is found by Finder\n   * @return {Promise}\n   */\n  check(){\n    // TODO target is all elements\n    return this.withAction(FinderAction.setChecked(true)).evaluate()\n  }\n  /**\n   * Set \"checked\" property true on all elements which is found by Finder\n   * @return {Promise}\n   */\n  uncheck(){\n    // TODO target is all elements\n    return this.withAction(FinderAction.setChecked(false)).evaluate()\n  }\n  /**\n   * Alias of \"click\"\n   * @return {Promise}\n   */\n  chooseRadioButton(){\n    return this.click();\n  }\n  /**\n   * Set \"selected\" property true on element which is found by Finder\n   * @return {Promise}\n   */\n  select(){\n    return this.withAction(FinderAction.setSelected(true)).evaluate();\n  }\n}\n\nmodule.exports = FinderAction;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page/finder_action.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "class",
    "name": "FinderAction",
    "memberof": "lib/page/finder_action.js",
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page/finder_action.js",
    "importStyle": "FinderAction",
    "description": "This class provides action methods for Finder.\nThis class is Mixined to \"Finder\" class",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 204,
    "kind": "get",
    "name": "count",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.count",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "get",
    "name": "text",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.text",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "attribute",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.attribute",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "attrName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "setText",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.setText",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "get",
    "name": "value",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.value",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "setValue",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.setValue",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "get",
    "name": "click",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.click",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "setChecked",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.setChecked",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "bool",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "setSelected",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_action.js~FinderAction.setSelected",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "bool",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "text",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#text",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "value",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#value",
    "access": "public",
    "description": "Get a value of element which is found first by Finder.",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved with element.value"
    },
    "params": []
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "attribute",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#attribute",
    "access": "public",
    "description": "Get a attribute of element which is found first by Finder.",
    "lineNumber": 61,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved with element.attributes[attrName].value"
    },
    "params": [
      {
        "name": "attrName",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "click",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#click",
    "access": "public",
    "description": "Click an element which is found first by Finder",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved after click event"
    },
    "params": []
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "count",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#count",
    "access": "public",
    "description": "Get a count of elements which is found by Finder.",
    "lineNumber": 75,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved with matched number"
    },
    "params": []
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "exist",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#exist",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "return true if count of elements which is found by Finder is over one."
    },
    "params": []
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "notExist",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#notExist",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "return true if count of elements which is found by Finder is zero."
    },
    "params": []
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "setValue",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#setValue",
    "access": "public",
    "description": "Set given value to value of all elements which is found by Finder",
    "lineNumber": 94,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved after setting value"
    },
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "fillIn",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#fillIn",
    "access": "public",
    "description": "Alias of \"setValue\"",
    "lineNumber": 100,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "setText",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#setText",
    "access": "public",
    "description": "Set given text to textContent of all elements which is found by Finder",
    "lineNumber": 107,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved after setting textContent"
    },
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "check",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#check",
    "access": "public",
    "description": "Set \"checked\" property true on all elements which is found by Finder",
    "lineNumber": 114,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "uncheck",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#uncheck",
    "access": "public",
    "description": "Set \"checked\" property true on all elements which is found by Finder",
    "lineNumber": 122,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "chooseRadioButton",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#chooseRadioButton",
    "access": "public",
    "description": "Alias of \"click\"",
    "lineNumber": 130,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "select",
    "memberof": "lib/page/finder_action.js~FinderAction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_action.js~FinderAction#select",
    "access": "public",
    "description": "Set \"selected\" property true on element which is found by Finder",
    "lineNumber": 137,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "lib/page/finder_base.js",
    "content": "const debug = require(\"../utils/debug\").getLogger(\"app\");\n\nclass FinderBase {\n  static convertArgumentsToConditions(...args){\n    return args.map((arg)=>{\n      if(typeof arg == 'function'){\n        return new Filter(arg.toString());\n      }\n      if(typeof arg == 'string'){\n        if(arg.match(/\\)\\s*=>\\s*\\{/) || arg.trim().match(/^function/)){\n          return new Filter(arg);\n        }else{\n          return new Selector(arg);\n        }\n      }\n      throw `Condition parameter is unexpected value, [${arg}]`;\n    })\n  }\n  constructor(page, ...args){\n    this._page = page;\n    this._conditions = FinderBase.convertArgumentsToConditions(...args);\n    this._allowNotFound = false;\n    this._context = undefined;\n    this._action = undefined;\n  }\n  get page(){ return this._page }\n  get conditions(){ return this._conditions }\n  get action(){ return this._action }\n  get context(){ return this._context }\n  get allowNotFound(){ return this._allowNotFound }\n  allowNotFound(val){ this._allowNotFound = val }\n  /**\n   * @return {Object} cloned object\n   */\n  clone(){\n    return Object.assign(new this.constructor(this.page), {\n      _conditions: this.conditions.concat(),\n      allowNotFound: this.allowNotFound,\n      _action: this.action,\n      _context: this.context\n    });\n  }\n  /**\n   * @return {FinderBase} self which have added conditions\n   */\n  find(...args){\n    this._conditions = this.conditions.concat(FinderBase.convertArgumentsToConditions(...args));\n    return this;\n  }\n  withAction(action){\n    this._action = typeof action == \"function\" ?  action.toString() : action;\n    return this;\n  }\n  withContext(context){\n    this._context = context;\n    return this;\n  }\n  /**\n   * generate and return javascript code for finding element by this finder object\n   * @return {string}\n   */\n  toJsCode(){\n    let conditions = this.conditions;\n    if(!conditions || !(conditions[0] instanceof Selector)){\n      conditions = [new Selector(\"*\")];\n    }\n\n    let jsCode = `\n      let _document = ${this.context ? this.context : 'window'}.document;\n      var elements = Array.from(_document.querySelectorAll(\"${conditions[0].selector}\"));\n    `;\n    jsCode += conditions.slice(1).map((condition)=>{\n      return condition instanceof Selector ?\n        `{\n          elements = elements.reduce((arr, e, idx)=>{\n            return arr.concat(Array.from(e.querySelectorAll(\"${condition.selector}\")));\n          }, []);\n        }` :\n        `{\n          let func = ${condition.code};\n          elements = elements.filter((e, idx)=>{ return func(e, idx) });\n        }`;\n    }).join(\"\\n\");\n\n    if(!this.allowNotFound){\n      jsCode += `\n        if(elements.length == 0){\n          return Promise.reject('not found');\n        }\n      `\n    }\n    if(this.action){\n      jsCode += `\n        return (${this.action})(elements);\n      `;\n    }\n    else{\n      jsCode += `return elements.length;`\n    }\n    return jsCode;\n  }\n\n  /**\n   * @return {Promise} Promise resolved in evaluated JavaScript code\n   */\n  evaluate(){\n    let jsCode = this.toJsCode();\n    debug(`Evaluate Javascript \"${jsCode}\"`)\n\n    return this.page.executeJs(`(()=>{ try{ ${jsCode} }catch(e){ return Promise.reject(e.toString()) } })()`)\n    .catch((err)=>{\n      debug(`Error occurred in Evaluating Javascript: ${err}`);\n      throw err\n    })\n  }\n}\n\nclass Filter {\n  constructor(code){\n    this.code = code;\n  }\n}\nclass Selector {\n  constructor(selector){\n    this.selector = selector;\n  }\n}\n\nmodule.exports = FinderBase;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page/finder_base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "debug",
    "memberof": "lib/page/finder_base.js",
    "static": true,
    "longname": "lib/page/finder_base.js~debug",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder_base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "class",
    "name": "Filter",
    "memberof": "lib/page/finder_base.js",
    "static": true,
    "longname": "lib/page/finder_base.js~Filter",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder_base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page/finder_base.js~Filter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~Filter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "code",
    "memberof": "lib/page/finder_base.js~Filter",
    "static": false,
    "longname": "lib/page/finder_base.js~Filter#code",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "class",
    "name": "Selector",
    "memberof": "lib/page/finder_base.js",
    "static": true,
    "longname": "lib/page/finder_base.js~Selector",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder_base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page/finder_base.js~Selector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~Selector#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "selector",
    "memberof": "lib/page/finder_base.js~Selector",
    "static": false,
    "longname": "lib/page/finder_base.js~Selector#selector",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "class",
    "name": "FinderBase",
    "memberof": "lib/page/finder_base.js",
    "static": true,
    "longname": "lib/page/finder_base.js~FinderBase",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page/finder_base.js",
    "importStyle": "FinderBase",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "convertArgumentsToConditions",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_base.js~FinderBase.convertArgumentsToConditions",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "_page",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#_page",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "_conditions",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#_conditions",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "_allowNotFound",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#_allowNotFound",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "_context",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#_context",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "_action",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#_action",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "get",
    "name": "page",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#page",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "get",
    "name": "conditions",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#conditions",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "get",
    "name": "action",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#action",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "get",
    "name": "context",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#context",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "get",
    "name": "allowNotFound",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#allowNotFound",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "allowNotFound",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#allowNotFound",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "clone",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#clone",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "cloned object"
    },
    "params": []
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "find",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#find",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "return": {
      "nullable": null,
      "types": [
        "FinderBase"
      ],
      "spread": false,
      "description": "self which have added conditions"
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "withAction",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#withAction",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "withContext",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#withContext",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "toJsCode",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#toJsCode",
    "access": "public",
    "description": "generate and return javascript code for finding element by this finder object",
    "lineNumber": 62,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "evaluate",
    "memberof": "lib/page/finder_base.js~FinderBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_base.js~FinderBase#evaluate",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved in evaluated JavaScript code"
    },
    "params": []
  },
  {
    "__docId__": 259,
    "kind": "file",
    "name": "lib/page/finder_filter.js",
    "content": "\nclass Private {\n  static haveContent(content, haveContent = true){\n    return `(elm, i)=>{ return elm.textContent && (elm.textContent.trim() == \"${content.trim()}\") === ${haveContent} }`;\n  }\n  static haveValue(value, haveValue = true){\n    return `(elm, i)=>{ return elm.value && (elm.value.trim() == \"${value.trim()}\") === ${haveValue} }`;\n  }\n  static haveClass(classname, haveClass = true){\n    return `(elm, i)=>{ return elm && (elm.classList.contains(\"${classname}\")) === ${haveClass} }`;\n  }\n  static haveStyle(styleName, value, haveStyle = true){\n    return `(elm, i)=>{ let style = getComputeStyle(elm); return style && (style[\"${styleName}\"] == \"${value}\") === ${haveStyle} }`\n  }\n  static be(propName, bool){\n    return `(elm, i)=>{ return elm && elm.${propName} === ${bool} }`;\n  }\n  static isClickable(){\n    return \"a,button,input[type=button],input[type=submit]\";\n  }\n  static indexOf(index){\n    return `(elm, i)=>{ return i == ${index} }`;\n  }\n}\n\n/**\n * This class provides filtering methods for Finder.\n * This class is Mixined to \"Finder\" class\n */\nclass FinderFilter {\n  /**\n   * @return {string} return function code to select elements which have given content as element.textContent\n   */\n  static haveContent(content){\n    return Private.haveContent(content, true);\n  }\n  /**\n   * @return {string} return function code to select elements which do not have given content as element.textContent\n   */\n  static notHaveContent(content){\n    return Private.haveContent(content, false);\n  }\n  /**\n  * Alias of haveContent\n   * @return {string} return function code to select elements which have given content as element.textContent\n   */\n  static haveText(text){\n    return this.haveContent(text)\n  }\n  /**\n   * Alias of notHaveContent\n   * @return {string} return function code to select elements which do not have given content as element.textContent\n   */\n  static notHaveText(text){\n    return this.notHaveContent(text)\n  }\n  /**\n   * @return {string} return function code to select elements which have given value as element.value\n   */\n  static haveValue(value){\n    return Private.haveValue(value, true);\n  }\n  /**\n   * @return {string} return function code to select elements which do not have given value as element.value\n   */\n  static notHaveValue(value){\n    return Private.haveValue(value, false);\n  }\n  /**\n   * @return {string} return function code to select elements which has given value as element.checked attribute.\n   */\n  static beChecked(bool){\n    return Private.be(\"checked\", bool)\n  }\n  /**\n   * @return {string} return function code to select elements which has given value as element.selected attribute.\n   */\n  static beSelected(bool){\n    return Private.be(\"selected\", bool)\n  }\n  /**\n   * @return {string} return function code to select elements which has given value as element.disabled attribute.\n   */\n  static beDisabled(bool){\n    return Private.be(\"disabled\", bool)\n  }\n  /**\n   * @return {string} return function code to select elements which has given value in element.classList attribute.\n   */\n  static haveClass(classname){\n    return Private.haveClass(classname, true);\n  }\n  /**\n   * @return {string} return function code to select elements which do not has given value in element.classList attribute.\n   */\n  static notHaveClass(classname){\n    return Private.haveClass(classname, false);\n  }\n  /**\n   * @return {string} return function code to select elements which has given value in window.getComputedStyle(element)\n   */\n  static haveStyle(styleName, value){\n    return Private.haveStyle(styleName, value, true);\n  }\n  /**\n   * @return {string} return function code to select elements which do not has given value in window.getComputedStyle(element)\n   */\n  static notHaveStyle(styleName, value){\n    return Private.haveStyle(styleName, value, false);\n  }\n\n  /**\n   * return css selector string to select clickable elements like a, button, input[type=button]\n   * @return {string}\n   */\n  static isClickable(){\n    return Private.isClickable()\n  }\n\n  /**\n   * return function code to select elements which is in given index in elements\n   * @return {string}\n   */\n  static indexOf(i){\n    return Private.indexOf(i);\n  }\n\n  ////// instance methods /////////////////////////////////////////////////////////////////////\n\n  /**\n   * @return {Finder} return filtered Finder object which has the specified value\n   */\n  haveValue(val){\n    return this.find(FinderFilter.haveValue(val))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which does not have the specified value\n   */\n  notHaveValue(val){\n    return this.find(FinderFilter.notHaveValue(val))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which has the specified text\n   */\n  haveContent(content){\n    return this.find(FinderFilter.haveContent(content))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which does not have the specified text\n   */\n  notHaveContent(content){\n    return this.find(FinderFilter.notHaveContent(content))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which has the specified text\n   */\n  haveText(text){\n    return this.find(FinderFilter.haveContent(text))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which does not have the specified text\n   */\n  notHaveText(text){\n    return this.find(FinderFilter.notHaveContent(text))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which has been checked\n   */\n  beChecked(){\n    return this.find(FinderFilter.beChecked(true))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which do not has been checked\n   */\n  notBeChecked(){\n    return this.find(FinderFilter.beChecked(false))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which has been selected\n   */\n  beSelected(){\n    return this.find(FinderFilter.beSelected(true))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which do not has been selected\n   */\n  notBeSelected(){\n    return this.find(FinderFilter.beSelected(false))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which has specified CssClass\n   */\n  haveCssClass(classname){\n    return this.find(FinderFilter.haveClass(classname))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which do not has specified CssClass\n   */\n  notHaveCssClass(classname){\n    return this.find(FinderFilter.notHaveClass(classname))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which has specified CssProperty\n   */\n  haveCssProperty(propName, value){\n    return this.find(FinderFilter.haveStyle(propName, value))\n  }\n  /**\n   * @return {Finder} return filtered Finder object which do not has specified CssProperty\n   */\n  notHaveCssProperty(propName, value){\n    return this.find(FinderFilter.notHaveStyle(propName, value))\n  }\n\n  /**\n   * @return {Finder} return filtered Finder object which is clickable like a, button, input[type=button]\n   */\n  isClickable(){\n    return this.find(FinderFilter.isClickable())\n  }\n  /**\n   * @return {Finder} return filtered Finder object which is in given index in elements\n   */\n  indexOf(i){\n    return this.find(FinderFilter.indexOf(i));\n  }\n  /**\n   * @return {Finder} return Finder for the first matched element. this is same to \"indexOf(0)\"\n   */\n  first(){\n    return this.indexOf(0);\n  }\n\n}\n\nmodule.exports = FinderFilter;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page/finder_filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 260,
    "kind": "class",
    "name": "Private",
    "memberof": "lib/page/finder_filter.js",
    "static": true,
    "longname": "lib/page/finder_filter.js~Private",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/finder_filter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "haveContent",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.haveContent",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      },
      {
        "name": "haveContent",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "haveValue",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.haveValue",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "haveValue",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "haveClass",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.haveClass",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "classname",
        "types": [
          "*"
        ]
      },
      {
        "name": "haveClass",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "haveStyle",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.haveStyle",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "styleName",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "haveStyle",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "be",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.be",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "bool",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "isClickable",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.isClickable",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "indexOf",
    "memberof": "lib/page/finder_filter.js~Private",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~Private.indexOf",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "class",
    "name": "FinderFilter",
    "memberof": "lib/page/finder_filter.js",
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page/finder_filter.js",
    "importStyle": "FinderFilter",
    "description": "This class provides filtering methods for Finder.\nThis class is Mixined to \"Finder\" class",
    "lineNumber": 30,
    "interface": false
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "haveContent",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.haveContent",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which have given content as element.textContent"
    },
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "notHaveContent",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.notHaveContent",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which do not have given content as element.textContent"
    },
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "haveText",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.haveText",
    "access": "public",
    "description": "Alias of haveContent",
    "lineNumber": 47,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which have given content as element.textContent"
    },
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "notHaveText",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.notHaveText",
    "access": "public",
    "description": "Alias of notHaveContent",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which do not have given content as element.textContent"
    },
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "haveValue",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.haveValue",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which have given value as element.value"
    },
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "notHaveValue",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.notHaveValue",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which do not have given value as element.value"
    },
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "beChecked",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.beChecked",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which has given value as element.checked attribute."
    },
    "params": [
      {
        "name": "bool",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "beSelected",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.beSelected",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which has given value as element.selected attribute."
    },
    "params": [
      {
        "name": "bool",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "beDisabled",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.beDisabled",
    "access": "public",
    "description": "",
    "lineNumber": 84,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which has given value as element.disabled attribute."
    },
    "params": [
      {
        "name": "bool",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "haveClass",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.haveClass",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which has given value in element.classList attribute."
    },
    "params": [
      {
        "name": "classname",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "notHaveClass",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.notHaveClass",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which do not has given value in element.classList attribute."
    },
    "params": [
      {
        "name": "classname",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "haveStyle",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.haveStyle",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which has given value in window.getComputedStyle(element)"
    },
    "params": [
      {
        "name": "styleName",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "notHaveStyle",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.notHaveStyle",
    "access": "public",
    "description": "",
    "lineNumber": 108,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "return function code to select elements which do not has given value in window.getComputedStyle(element)"
    },
    "params": [
      {
        "name": "styleName",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "isClickable",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.isClickable",
    "access": "public",
    "description": "return css selector string to select clickable elements like a, button, input[type=button]",
    "lineNumber": 116,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "indexOf",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page/finder_filter.js~FinderFilter.indexOf",
    "access": "public",
    "description": "return function code to select elements which is in given index in elements",
    "lineNumber": 124,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "haveValue",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#haveValue",
    "access": "public",
    "description": "",
    "lineNumber": 133,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has the specified value"
    },
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "notHaveValue",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notHaveValue",
    "access": "public",
    "description": "",
    "lineNumber": 139,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which does not have the specified value"
    },
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "haveContent",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#haveContent",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has the specified text"
    },
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "notHaveContent",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notHaveContent",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which does not have the specified text"
    },
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "haveText",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#haveText",
    "access": "public",
    "description": "",
    "lineNumber": 157,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has the specified text"
    },
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "notHaveText",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notHaveText",
    "access": "public",
    "description": "",
    "lineNumber": 163,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which does not have the specified text"
    },
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "beChecked",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#beChecked",
    "access": "public",
    "description": "",
    "lineNumber": 169,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has been checked"
    },
    "params": []
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "notBeChecked",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notBeChecked",
    "access": "public",
    "description": "",
    "lineNumber": 175,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which do not has been checked"
    },
    "params": []
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "beSelected",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#beSelected",
    "access": "public",
    "description": "",
    "lineNumber": 181,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has been selected"
    },
    "params": []
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "notBeSelected",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notBeSelected",
    "access": "public",
    "description": "",
    "lineNumber": 187,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which do not has been selected"
    },
    "params": []
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "haveCssClass",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#haveCssClass",
    "access": "public",
    "description": "",
    "lineNumber": 193,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has specified CssClass"
    },
    "params": [
      {
        "name": "classname",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "notHaveCssClass",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notHaveCssClass",
    "access": "public",
    "description": "",
    "lineNumber": 199,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which do not has specified CssClass"
    },
    "params": [
      {
        "name": "classname",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "haveCssProperty",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#haveCssProperty",
    "access": "public",
    "description": "",
    "lineNumber": 205,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which has specified CssProperty"
    },
    "params": [
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "notHaveCssProperty",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#notHaveCssProperty",
    "access": "public",
    "description": "",
    "lineNumber": 211,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which do not has specified CssProperty"
    },
    "params": [
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "isClickable",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#isClickable",
    "access": "public",
    "description": "",
    "lineNumber": 218,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which is clickable like a, button, input[type=button]"
    },
    "params": []
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "indexOf",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#indexOf",
    "access": "public",
    "description": "",
    "lineNumber": 224,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return filtered Finder object which is in given index in elements"
    },
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "first",
    "memberof": "lib/page/finder_filter.js~FinderFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/finder_filter.js~FinderFilter#first",
    "access": "public",
    "description": "",
    "lineNumber": 230,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": "return Finder for the first matched element. this is same to \"indexOf(0)\""
    },
    "params": []
  },
  {
    "__docId__": 301,
    "kind": "file",
    "name": "lib/page/page.js",
    "content": "const path = require('path');\nconst Finder = require('./finder');\nconst pageWalker = require('../page_walker');\nconst {config} = pageWalker;\nconst BrowserPage = require('../browser/interface/browser_page');\n\nconst TIMEOUT_MSEC = pageWalker.config.mocha.timeout;\n\nclass Page {\n  constructor(browserPage, context = undefined){\n    this._browserPage = browserPage;\n    this._context = context;\n  }\n  /**\n   * @return {BrowserPage} BrowserPage Object(Instance will be relayed on Browser used)\n   */\n  get browserPage(){ return this._browserPage }\n  /**\n   * @private\n   */\n  get context(){ return this._context }\n  /**\n   * @return {Window} Window Object which contains this page.\n   */\n  get window(){ return this._browserPage.window }\n  /**\n   * @return {object} Page Object provided by Each Browser\n   */\n  get webContents(){ return this._browserPage.nativeObject }\n  /**\n   * @private\n   */\n  checkReady(){\n    if(!this.window.isReady()) throw \"PageContent is not ready!, Please call the 'load' method first\"\n  }\n  /**\n   * Load new page which is URL given, and returned Promise is resolved when finished load.\n   * @return {Promise}\n   */\n  load(url, options = {}){\n    let loadURLFunction = ()=>{\n      return this.waitForPageLoad(()=>{ if(url) this.browserPage.loadURL(url, options) })\n    };\n    if(this.window.isReady()){\n      return loadURLFunction()\n    }else{\n      return new Promise((resolve, reject)=>{\n        this.window.on('ready', ()=>{ loadURLFunction().then(resolve).catch(reject) });\n      });\n    }\n  }\n  /**\n   * When string given, load given URL page. Otherwise, wait for finish page load.\n   * This is same for `page.load()` or `page.waitForPageLoad()`\n   * @return {Promise}\n   */\n  waitLoading(...args){\n    if(typeof args[0] == 'undefined' || typeof args[0] == 'function'){\n      return this.waitForPageLoad(...args)\n    }else{\n      return this.load(...args)\n    }\n  }\n  /**\n   * URL of current page\n   * @return {string}\n   */\n  get url(){\n    return this.browserPage.getURL();\n  }\n  /**\n   * Wait loading for contents in new page.\n   * @param {function} action - A function representing the operation of loading new page.\n   * @return {Promise}\n   */\n  waitForPageLoad(action){\n    if(this._context){\n      return this.waitForBrowserSocket('iframe-page-load', ()=>{\n        return this.executeJs(`{\n          ${this._context}.addEventListener('DOMContentLoaded', ()=>{\n            window.browserSocket.send('iframe-page-load', 'loaded');\n          })\n        }`);\n      })\n    }\n    return this.invokeAfterReady((resolve, reject)=>{\n      this.browserPage.removeAllListeners(BrowserPage.Events.Load);\n      this.browserPage.removeAllListeners(BrowserPage.Events.LoadError);\n\n      let timeoutId = setTimeout(()=>{ reject(new Error('timeout')) }, TIMEOUT_MSEC);\n      this.browserPage.once(BrowserPage.Events.Load, (event)=>{\n        clearTimeout(timeoutId)\n        resolve(this)\n      })\n      this.browserPage.once(BrowserPage.Events.LoadError, (event)=>{\n        clearTimeout(timeoutId)\n        reject(event)\n      })\n      this.invokeAction(action, reject);\n    })\n  }\n  /**\n   * Wait file-download completed and resolve the promise with result object(contains filename, savedFilePath)\n   * A File is saved in config.fileDownloadDir with timestamp string like '20171225002540_print.pdf'\n   * @param {function} action - A function representing the operation of file download\n   * @param {object} options - options for downloading\n   * @return {Promise<object>} object have property \"filename\" and \"savedFilePath\"\n   * @example\n   *   const item = await page.waitForDownload(()=>{\n   *     ...\n   *   })\n   *   assert.equal(await (util.promisify(fs.readFile))(item.savedFilePath, 'utf-8'), ...);\n   */\n  waitForDownload(action, options = {}){\n    return this.invokeAfterReady((resolve, reject)=>{\n      return this.browserPage.waitForDownload(()=>{\n        this.invokeAction(action, reject);\n      }, options)\n      .then(resolve).catch(reject);\n    })\n  }\n  /**\n   * Wait new-window opend and resolve the promise with Window object.\n   * @param {function} action - A function representing the operation of open new window\n   * @return {Promise}\n   * @example\n   *   const newWin = await page.waitForNewWindow(()=>{\n   *     ...\n   *   })\n   *   newWin.page.find(...).click();\n   *   newWin.close();\n   */\n  waitForNewWindow(action){\n    return this.invokeAfterReady((resolve, reject)=>{\n      let timeoutId = setTimeout(()=>{ reject('timeout') }, TIMEOUT_MSEC);\n      this.browserPage.removeAllListeners(BrowserPage.Events.NewWindow);\n      this.browserPage.once(BrowserPage.Events.NewWindow, (frameName)=>{\n        clearTimeout(timeoutId);\n        if(pageWalker.getWindow(frameName)){\n          resolve(pageWalker.getWindow(frameName));\n        }else{\n          reject(new Error(`no window opened! [${frameName}]`));\n        }\n      })\n      this.invokeAction(action, reject);\n    })\n  }\n  /**\n   * @param {string} channel - string of representing the channel of Browser Socket Message. default is 'asynchronous-message-channel'.\n   * @param {function} action - A function representing the operation of sending Browser Socket Message\n   * @return {Promise}\n   */\n  waitForBrowserSocket(channel, action){\n    if(!action && typeof channel === 'function'){\n      action = channel;\n      channel = 'asynchronous-message-channel'\n    }\n    return this.invokeAfterReady((resolve, reject)=>{\n      let timeoutId = setTimeout(()=>{ reject('timeout') }, TIMEOUT_MSEC);\n      this.browserPage.socket.removeAllListeners(channel);\n      this.browserPage.socket.once(channel, (arg)=>{\n        clearTimeout(timeoutId);\n\n        resolve(arg);\n      });\n      this.invokeAction(action, reject);\n    })\n  }\n  /**\n   * @param {function} action - A function representing the operation of sending Ajax request\n   * @return {Promise}\n   */\n  waitForAjaxDone(action){\n    return this.waitForBrowserSocket(\"notify-ajax-done\", ()=>{\n      return this.executeJs(`{\n        let _XMLHttpRequest = ${this.context ? this.context : 'window'}.XMLHttpRequest;\n        let _browserSocket = ${this.context ? 'parent' : 'window'}.browserSocket;\n        let __original_open = _XMLHttpRequest.prototype.open;\n\n        _XMLHttpRequest.prototype.open = function(){\n          let timeoutId = setTimeout(()=>{ _browserSocket.send('notify-ajax-done', 'timeout') }, ${TIMEOUT_MSEC})\n          this.addEventListener('readystatechange', function(){\n            if(this.readyState == 4){\n              clearTimeout(timeoutId);\n              setTimeout(()=>{ _browserSocket.send('notify-ajax-done', 'ajaxComplete') }, 0);\n            }\n          });\n          __original_open.apply(this, arguments);\n        };\n      }`)\n      .then(()=>{ return action && action() })\n    })\n    .then((result)=>{\n      if(result == 'ajaxComplete') return;\n      throw result;\n    });\n  }\n  /**\n   * @param {object} confirmOption - specify message property(default undefined), and isClickOK property(default true)\n   * @param {function} action - A function representing the operation of open confirm dialog\n   * @return {Promise}\n   * @example\n   *   await page.waitConfirmDialog({ message: \"Are you OK?\", isClickOK: false }, ()=>{\n   *     page.find(\"button.submit-form\").click()\n   *   })\n   *\n   *   await page.waitLoading(async ()=>{\n   *     await page.waitForConfirm(async ()=>{\n   *       await page.find(\"button.submit-form\").click()\n   *     })\n   *   })\n   */\n  waitForConfirm(confirmOption, action){\n    const defaultOption = { message: \"\", isClickOK: true };\n    if(typeof action == \"undefined\" && typeof confirmOption == \"function\"){\n      action = confirmOption\n      confirmOption = defaultOption;\n    }\n    let message = confirmOption.message || defaultOption.message;\n    let isClickOK = ('isClickOK' in confirmOption)? confirmOption.isClickOK : defaultOption.isClickOK;\n\n    return this.invokeAfterReady((resolve, reject)=>{\n      this.browserPage.waitForConfirm(action, message, isClickOK)\n      .then(resolve).catch(reject);\n    })\n  }\n  /**\n   * @private\n   */\n  invokeAfterReady(func){\n    return new Promise((resolve, reject)=>{\n      try{\n        this.checkReady()\n        func && func(resolve, reject);\n      }\n      catch(err){ return reject(err) }\n    })\n  }\n  /**\n   * @private\n   */\n  invokeAction(action, reject){\n    let actionResult = action && action()\n    if(actionResult instanceof Promise){\n      actionResult.catch(reject)\n    }\n    return actionResult;\n  }\n  /**\n   * @param {string} code - JavaScript Code for executing this page.\n   * @return {Promise}\n   */\n  executeJs(code){\n    try{ this.checkReady() }catch(err){ return Promise.reject(err) }\n    return this.browserPage.executeJavaScript(code, true)\n  }\n  /**\n   * Create and Return new Finder object with given finder-condition\n   * @override\n   * @return {Finder}\n   */\n  find(...args){\n    let finder = new (this.browserPage.FinderClass)(this, ...args)\n    return this.context ? finder.withContext(this.context) : finder;\n  }\n  /**\n   * Create and Return new Page object in given iframe context.\n   * @param {Finder} finderForIframe - finder object for iframe\n   * @return {Page}\n   * @example\n   *   const pageInIframe = page.inIframe(page.find(\"iframe\").first());\n   *   await pageInIframe.find(\"h3\").text()\n   */\n  inIframe(finderForIframe){\n    return new Page(this._browserPage, finderForIframe.toContextString());\n  }\n  /**\n   * Get the HTML source of current page.\n   * @return {Promise} resolved by current HTML source.\n   */\n  getSourceHTML(){\n    return this.executeJs(`document.getElementsByTagName(\"html\")[0].outerHTML`);\n  }\n\n  findClickable(){\n    return this.find().isClickable()\n  }\n\n  openDevTools(){\n    return this._browserPage.openDevTools();\n  }\n}\n\nmodule.exports = Page;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page/page.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 302,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "Finder",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~Finder",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "pageWalker",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~pageWalker",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~config",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 306,
    "kind": "variable",
    "name": "BrowserPage",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~BrowserPage",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "TIMEOUT_MSEC",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~TIMEOUT_MSEC",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "class",
    "name": "Page",
    "memberof": "lib/page/page.js",
    "static": true,
    "longname": "lib/page/page.js~Page",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page/page.js",
    "importStyle": "Page",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 309,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "_browserPage",
    "memberof": "lib/page/page.js~Page",
    "static": false,
    "longname": "lib/page/page.js~Page#_browserPage",
    "access": "private",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "_context",
    "memberof": "lib/page/page.js~Page",
    "static": false,
    "longname": "lib/page/page.js~Page#_context",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "get",
    "name": "browserPage",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#browserPage",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "return": {
      "nullable": null,
      "types": [
        "BrowserPage"
      ],
      "spread": false,
      "description": "BrowserPage Object(Instance will be relayed on Browser used)"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "get",
    "name": "context",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#context",
    "access": "private",
    "description": "",
    "lineNumber": 21,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "get",
    "name": "window",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#window",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "return": {
      "nullable": null,
      "types": [
        "Window"
      ],
      "spread": false,
      "description": "Window Object which contains this page."
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "get",
    "name": "webContents",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#webContents",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Page Object provided by Each Browser"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "checkReady",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#checkReady",
    "access": "private",
    "description": "",
    "lineNumber": 33,
    "params": [],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "load",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#load",
    "access": "public",
    "description": "Load new page which is URL given, and returned Promise is resolved when finished load.",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "waitLoading",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitLoading",
    "access": "public",
    "description": "When string given, load given URL page. Otherwise, wait for finish page load.\nThis is same for `page.load()` or `page.waitForPageLoad()`",
    "lineNumber": 57,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 319,
    "kind": "get",
    "name": "url",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#url",
    "access": "public",
    "description": "URL of current page",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "waitForPageLoad",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitForPageLoad",
    "access": "public",
    "description": "Wait loading for contents in new page.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A function representing the operation of loading new page."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "waitForDownload",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitForDownload",
    "access": "public",
    "description": "Wait file-download completed and resolve the promise with result object(contains filename, savedFilePath)\nA File is saved in config.fileDownloadDir with timestamp string like '20171225002540_print.pdf'",
    "examples": [
      "  const item = await page.waitForDownload(()=>{\n    ...\n  })\n  assert.equal(await (util.promisify(fs.readFile))(item.savedFilePath, 'utf-8'), ...);"
    ],
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A function representing the operation of file download"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "options for downloading"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "object have property \"filename\" and \"savedFilePath\""
    }
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "waitForNewWindow",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitForNewWindow",
    "access": "public",
    "description": "Wait new-window opend and resolve the promise with Window object.",
    "examples": [
      "  const newWin = await page.waitForNewWindow(()=>{\n    ...\n  })\n  newWin.page.find(...).click();\n  newWin.close();"
    ],
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A function representing the operation of open new window"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "waitForBrowserSocket",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitForBrowserSocket",
    "access": "public",
    "description": "",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "channel",
        "description": "string of representing the channel of Browser Socket Message. default is 'asynchronous-message-channel'."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A function representing the operation of sending Browser Socket Message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "waitForAjaxDone",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitForAjaxDone",
    "access": "public",
    "description": "",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A function representing the operation of sending Ajax request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "waitForConfirm",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#waitForConfirm",
    "access": "public",
    "description": "",
    "examples": [
      "  await page.waitConfirmDialog({ message: \"Are you OK?\", isClickOK: false }, ()=>{\n    page.find(\"button.submit-form\").click()\n  })\n\n  await page.waitLoading(async ()=>{\n    await page.waitForConfirm(async ()=>{\n      await page.find(\"button.submit-form\").click()\n    })\n  })"
    ],
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "confirmOption",
        "description": "specify message property(default undefined), and isClickOK property(default true)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A function representing the operation of open confirm dialog"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "invokeAfterReady",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#invokeAfterReady",
    "access": "private",
    "description": "",
    "lineNumber": 230,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "invokeAction",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#invokeAction",
    "access": "private",
    "description": "",
    "lineNumber": 242,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "executeJs",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#executeJs",
    "access": "public",
    "description": "",
    "lineNumber": 253,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "JavaScript Code for executing this page."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "find",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#find",
    "access": "public",
    "description": "Create and Return new Finder object with given finder-condition",
    "lineNumber": 262,
    "return": {
      "nullable": null,
      "types": [
        "Finder"
      ],
      "spread": false,
      "description": ""
    },
    "override": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "inIframe",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#inIframe",
    "access": "public",
    "description": "Create and Return new Page object in given iframe context.",
    "examples": [
      "  const pageInIframe = page.inIframe(page.find(\"iframe\").first());\n  await pageInIframe.find(\"h3\").text()"
    ],
    "lineNumber": 274,
    "params": [
      {
        "nullable": null,
        "types": [
          "Finder"
        ],
        "spread": false,
        "optional": false,
        "name": "finderForIframe",
        "description": "finder object for iframe"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Page"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "getSourceHTML",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#getSourceHTML",
    "access": "public",
    "description": "Get the HTML source of current page.",
    "lineNumber": 281,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolved by current HTML source."
    },
    "params": []
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "findClickable",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#findClickable",
    "access": "public",
    "description": null,
    "lineNumber": 285,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "openDevTools",
    "memberof": "lib/page/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/page.js~Page#openDevTools",
    "access": "public",
    "description": null,
    "lineNumber": 289,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "lib/page/window.js",
    "content": "const EventEmitter = require('events');\nconst path = require('path');\nconst {config} = require('../utils/config');\nconst Page = require('./page');\nconst pageWalker = require('../page_walker');\n\nclass Window extends EventEmitter {\n  constructor(id, name, browser, options = {}){\n    super();\n    this.id = id; // unless window exists, id is undefined\n    this.name = name;\n    // setup now or later\n    let configCloned = config.clone();\n    configCloned.merge({ [config.browser]: options });\n\n    let windowSetup = ()=>{\n      pageWalker.browser.createBrowserWindow(configCloned[config.browser], {\n        'new-window': (frameName, id, options) => {\n          return pageWalker.getWindow(frameName) || pageWalker.createWindow(frameName, id, options);\n        },\n        'closed': (id)=>{\n          pageWalker.removeWindowById(id);\n        }\n      })\n      .then((result)=>{\n        this._browserWindow = result.browserWindow;\n        this.id = result.id;\n        this.emit('ready');\n      });\n    };\n    if(browser && browser.isReady()){\n      browser.getBrowserWindowById(id)\n      .then((browserWindow)=>{\n        if(browserWindow){\n          this._browserWindow = browserWindow;\n          this.emit('ready');\n        }else{\n          windowSetup();\n        }\n      })\n    }else{\n      browser.on('ready', windowSetup);\n    }\n  }\n  /**\n   * @return {object} BrowserWindow Object(Provided by Each Browser)\n   * @see Browser#createWindow\n   */\n  get browserWindow(){ return this._browserWindow }\n  /**\n   * close this BrowserWindow();\n   */\n  close(){\n    // Each browserWindow object have close() method.\n    this._browserWindow.close();\n  }\n  /**\n   * @private\n   */\n  isReady(){ return !!this._browserWindow }\n  /**\n   * get Page object in this window.\n   * @return {Page}\n   */\n  get page(){\n    if(!this._page){\n      this._page = new Page(pageWalker.browser.createBrowserPage(this));\n    }\n    return this._page;\n  }\n}\n\nmodule.exports = Window;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page/window.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "lib/page/window.js",
    "static": true,
    "longname": "lib/page/window.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/window.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/page/window.js",
    "static": true,
    "longname": "lib/page/window.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/window.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 337,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/page/window.js",
    "static": true,
    "longname": "lib/page/window.js~config",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/window.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 338,
    "kind": "variable",
    "name": "Page",
    "memberof": "lib/page/window.js",
    "static": true,
    "longname": "lib/page/window.js~Page",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/window.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 339,
    "kind": "variable",
    "name": "pageWalker",
    "memberof": "lib/page/window.js",
    "static": true,
    "longname": "lib/page/window.js~pageWalker",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page/window.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 340,
    "kind": "class",
    "name": "Window",
    "memberof": "lib/page/window.js",
    "static": true,
    "longname": "lib/page/window.js~Window",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page/window.js",
    "importStyle": "Window",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 341,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page/window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/window.js~Window#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 342,
    "kind": "member",
    "name": "id",
    "memberof": "lib/page/window.js~Window",
    "static": false,
    "longname": "lib/page/window.js~Window#id",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "member",
    "name": "name",
    "memberof": "lib/page/window.js~Window",
    "static": false,
    "longname": "lib/page/window.js~Window#name",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "member",
    "name": "_browserWindow",
    "memberof": "lib/page/window.js~Window",
    "static": false,
    "longname": "lib/page/window.js~Window#_browserWindow",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "get",
    "name": "browserWindow",
    "memberof": "lib/page/window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/window.js~Window#browserWindow",
    "access": "public",
    "description": "",
    "see": [
      "Browser#createWindow"
    ],
    "lineNumber": 49,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "BrowserWindow Object(Provided by Each Browser)"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "close",
    "memberof": "lib/page/window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/window.js~Window#close",
    "access": "public",
    "description": "close this BrowserWindow();",
    "lineNumber": 53,
    "params": [],
    "return": null
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "isReady",
    "memberof": "lib/page/window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/window.js~Window#isReady",
    "access": "private",
    "description": "",
    "lineNumber": 60,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "get",
    "name": "page",
    "memberof": "lib/page/window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page/window.js~Window#page",
    "access": "public",
    "description": "get Page object in this window.",
    "lineNumber": 65,
    "return": {
      "nullable": null,
      "types": [
        "Page"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "_page",
    "memberof": "lib/page/window.js~Window",
    "static": false,
    "longname": "lib/page/window.js~Window#_page",
    "access": "private",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "file",
    "name": "lib/page_walker.js",
    "content": "const electron = require('electron');\nconst Config = require('./utils/config');\nconst LoadWalkerModule = ()=>{ return require('./walker/walker') }; // for Lazy loading\nconst LoadWindowModudle = ()=>{ return require('./page/window') }; // for Lazy loading\n\nclass PageWalker {\n  constructor(){\n    this.windows = {};\n  }\n  start(config){\n    this._config = config;\n\n    this._browser = new (require(`./browser/${config.browser}`))(config[config.browser]);\n\n    const Walker = LoadWalkerModule();\n    this._walker = new Walker(config);\n\n    this._browser.on('ready', ()=>{\n      this._walker.walk((failures)=>{\n        console.log(`[${failures == 0? 'SUCCESS': 'FAILURE'}!] finished with status:${failures}`);\n        if(this.config.exitImmediately){\n          this._browser.exit(failures);  // exit with non-zero status if there were failures\n        }else{\n          Object.values(this.windows).forEach((window)=>{ window.page.openDevTools() });;\n        }\n      })\n    })\n  }\n  /**\n   * @return {Browser} Browser Object(Instance will be relayed on Browser used)\n   */\n  get browser(){\n    return this._browser;\n  }\n  get config(){\n    return this._config;\n  }\n  get page(){\n    return this.getWindow().page;\n  }\n  getWindow(name = \"__default__\"){\n    if(name == \"__default__\" && !this.windows[name]){\n      this.createWindow(\"__default__\", { title: \"MainWindow - PageWalker\" });\n    }\n    return this.windows[name]\n  }\n  getWindowById(id){\n    return Object.values(this.windows).filter(window => window.id && window.id == id )[0];\n  }\n  createWindow(name, windowOptions = {}){\n    return this.createWindowWithId(name, undefined, windowOptions);\n  }\n  createWindowWithId(name, id, windowOptions = {}){\n    const Window = LoadWindowModudle();\n    this.windows[name] = new Window(id, name, this._browser, windowOptions);\n    return this.windows[name];\n  }\n  /**\n   * remove window referrence, but not destroy window object.\n   */\n  removeWindow(name){\n    this.windows[name] = undefined;\n  }\n  /**\n   * remove window referrence, but not destroy window object.\n   */\n  removeWindowById(id){\n    let window = this.getWindowById(id);\n    if(window && window.name){\n      this.windows[window.name] = undefined;\n    }\n\n  }\n\n}\n\nmodule.exports = new PageWalker();\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/page_walker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "variable",
    "name": "electron",
    "memberof": "lib/page_walker.js",
    "static": true,
    "longname": "lib/page_walker.js~electron",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page_walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 354,
    "kind": "variable",
    "name": "Config",
    "memberof": "lib/page_walker.js",
    "static": true,
    "longname": "lib/page_walker.js~Config",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page_walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "LoadWalkerModule",
    "memberof": "lib/page_walker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page_walker.js~LoadWalkerModule",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page_walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "function",
    "name": "LoadWindowModudle",
    "memberof": "lib/page_walker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/page_walker.js~LoadWindowModudle",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/page_walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 357,
    "kind": "class",
    "name": "PageWalker",
    "memberof": "lib/page_walker.js",
    "static": true,
    "longname": "lib/page_walker.js~PageWalker",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page_walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "pseudoExport": true,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 358,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "windows",
    "memberof": "lib/page_walker.js~PageWalker",
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#windows",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "start",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#start",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "_config",
    "memberof": "lib/page_walker.js~PageWalker",
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#_config",
    "access": "private",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "member",
    "name": "_browser",
    "memberof": "lib/page_walker.js~PageWalker",
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#_browser",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "member",
    "name": "_walker",
    "memberof": "lib/page_walker.js~PageWalker",
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#_walker",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "get",
    "name": "browser",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#browser",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "return": {
      "nullable": null,
      "types": [
        "Browser"
      ],
      "spread": false,
      "description": "Browser Object(Instance will be relayed on Browser used)"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "get",
    "name": "config",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#config",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "get",
    "name": "page",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#page",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "getWindow",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#getWindow",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "__default__",
        "defaultValue": "__default__"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "getWindowById",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#getWindowById",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "createWindow",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#createWindow",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "windowOptions",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "createWindowWithId",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#createWindowWithId",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "windowOptions",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "removeWindow",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#removeWindow",
    "access": "public",
    "description": "remove window referrence, but not destroy window object.",
    "lineNumber": 61,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "removeWindowById",
    "memberof": "lib/page_walker.js~PageWalker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/page_walker.js~PageWalker#removeWindowById",
    "access": "public",
    "description": "remove window referrence, but not destroy window object.",
    "lineNumber": 67,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "pageWalker",
    "memberof": "lib/page_walker.js",
    "static": true,
    "longname": "lib/page_walker.js~pageWalker",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/page_walker.js",
    "importStyle": "pageWalker",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "lib/page_walker.js~PageWalker"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "lib/utils/config.js",
    "content": "const fs = require(\"fs\");\nconst path = require(\"path\");\nconst OptParser = require(\"./opt_parser\");\n\n/**\n * this class have configuratin information.\n */\nclass Config {\n  static get CONFIG_FILE_PATH(){\n    return \"config.json\";\n  }\n  static get DEFAULT_CONFIG(){\n    return {\n      browser: \"electron\",\n      scenarioDir: \"scenario\",\n      scenarioFile: undefined,\n      ignoreDir: \"supports\",\n      successSaveFile: \"success-scenario.log\",\n      silentMode: false,\n      startFromFirst: false,\n      exitImmediately: false,\n      fileDownloadDir: \"downloads\",\n      mocha: {\n        ui: \"bdd\",\n        bail: true,\n        reporter: \"spec\",\n        timeout: 5000,\n        slow: false,\n      },\n      electron: {\n        width: 1024,\n        height: 768,\n        show: true,\n        webPreferences: {\n          nodeIntegration: false,\n          preload: path.join(__dirname, \"../browser/electron/window_preloaded.js\"),\n          allowRunningInsecureContent: true\n        }\n      },\n      puppeteer: {\n        headless: false\n      }\n    }\n  }\n  static create(commandLineArgs){\n    this.instance = new Config();\n    this.instance.merge(Config.DEFAULT_CONFIG)\n    this.instance.loadConfigFile(this.CONFIG_FILE_PATH);\n    this.instance.loadConfigFile(this.CONFIG_FILE_PATH + \".local\");\n\n    let optParser = new OptParser(commandLineArgs);\n    this.instance.merge(optParser.parse((config, cmdOpt)=>{\n      switch(cmdOpt.option()){\n        case \"-r\":\n        case \"--reset\":           config.startFromFirst = true; break;\n        case \"-s\":\n        case \"--silent\":          config.silentMode     = true; break;\n        default:\n          if(this.instance.isExists(cmdOpt.option(true))){\n            Config.assign(config, cmdOpt.option(true), cmdOpt.getValueOrFail())\n          }else{\n            throw new Error(\"Unexpected CommandLine Argument, [\" + cmdOpt.option() + \"]\");\n          }\n      }\n    }));\n\n    optParser.scriptArguments().forEach((args)=>{\n      let filePath = args[0] == \"/\" ? args : path.join(process.cwd(), args);\n      let stat = fs.statSync(filePath)\n      let keyName = stat.isDirectory() ? \"scenarioDir\" : \"scenarioFile\";\n      if(!(this.instance[keyName] instanceof Array)){\n        this.instance[keyName] = []\n      }\n      this.instance[keyName].push(args);\n    })\n\n    // apply options\n    if(this.instance.silentMode){\n      this.instance.electron.show = false;\n      this.instance.puppeteer.headless = true;\n      this.instance.mocha.reporter = \"dot\";\n      this.instance.exitImmediately = true;\n    }\n    // validates\n    if(![\"electron\", \"puppeteer\"].includes(this.instance.browser)){\n      throw new Error(`config.browser is not allowed! [${this.instance.browser}]`)\n    }\n    return this.instance;\n  }\n  static get config(){\n    return this.instance;\n  }\n  /**\n   * @private\n   */\n  loadConfigFile(filePath){\n    if(fs.existsSync(filePath)){\n      this.merge(JSON.parse(fs.readFileSync(filePath, 'utf8')));\n    }\n  }\n  clone(){\n    let cloned = new Config();\n    cloned.merge(this);\n    return cloned;\n  }\n  merge(source){\n    Config.merge(this, source);\n  }\n  static merge(dest, source){\n    Object.keys(source).forEach((key)=>{\n      if(typeof source[key] == \"object\" && typeof dest[key] == \"object\"){\n        this.merge(dest[key], source[key]);\n      }else{\n        dest[key] = source[key];\n      }\n    });\n  }\n  isExists(key){\n    return !!key.split(\".\").reduce((result, k)=>{ return Config.isExists(result, k) })\n  }\n  static isExists(object, key){\n    if(typeof object != \"object\") return false;\n    if(key in object){\n      return typeof object[key] == \"object\" ? object[key] : true;\n    }\n  }\n  static assign(config, key, value){\n    let keys = key.split(\".\");\n    keys.reduce((object, key, index)=>{\n      if(index < keys.length - 1){\n        return object[key];\n      }\n      switch(typeof object[key]){\n        case 'number':  object[key] = new Number(value);\n        case 'boolean': object[key] = new Boolean(value);\n        default:        object[key] = value;\n      }\n    }, config);\n  }\n}\n\nmodule.exports = Config;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/utils/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/utils/config.js",
    "static": true,
    "longname": "lib/utils/config.js~fs",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/utils/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/utils/config.js",
    "static": true,
    "longname": "lib/utils/config.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/utils/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "variable",
    "name": "OptParser",
    "memberof": "lib/utils/config.js",
    "static": true,
    "longname": "lib/utils/config.js~OptParser",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/utils/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "class",
    "name": "Config",
    "memberof": "lib/utils/config.js",
    "static": true,
    "longname": "lib/utils/config.js~Config",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/utils/config.js",
    "importStyle": "Config",
    "description": "this class have configuratin information.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 379,
    "kind": "get",
    "name": "CONFIG_FILE_PATH",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.CONFIG_FILE_PATH",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "get",
    "name": "DEFAULT_CONFIG",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.DEFAULT_CONFIG",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"browser\": string, \"scenarioDir\": string, \"scenarioFile\": *, \"ignoreDir\": string, \"successSaveFile\": string, \"silentMode\": *, \"startFromFirst\": *, \"exitImmediately\": *, \"fileDownloadDir\": string, \"mocha\": *, \"electron\": *, \"puppeteer\": *}"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "create",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.create",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "commandLineArgs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "instance",
    "memberof": "lib/utils/config.js~Config",
    "static": true,
    "longname": "lib/utils/config.js~Config.instance",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "get",
    "name": "config",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.config",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "loadConfigFile",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/config.js~Config#loadConfigFile",
    "access": "private",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "clone",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/config.js~Config#clone",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "merge",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/config.js~Config#merge",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "merge",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.merge",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "isExists",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/config.js~Config#isExists",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "method",
    "name": "isExists",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.isExists",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "assign",
    "memberof": "lib/utils/config.js~Config",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/config.js~Config.assign",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 391,
    "kind": "file",
    "name": "lib/utils/date_format.js",
    "content": "class DateFormat {\n  static format(date, formatString){\n    let [ yyyy, mm, dd, HH, MM, ss, ...rest ] = date.toISOString().split(/[-T:.]/);\n    let replacement = { yyyy: yyyy, mm: mm, dd: dd, HH: HH, MM: MM, ss: ss };\n\n    for(let key in replacement){\n      formatString = formatString.replace(new RegExp(key), replacement[key])\n    }\n    return formatString;\n  }\n  static toTimepstampString(date){\n    return this.format(date, 'yyyymmddHHMMss')\n  }\n}\n\nmodule.exports = DateFormat;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/utils/date_format.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 392,
    "kind": "class",
    "name": "DateFormat",
    "memberof": "lib/utils/date_format.js",
    "static": true,
    "longname": "lib/utils/date_format.js~DateFormat",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/utils/date_format.js",
    "importStyle": "DateFormat",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "format",
    "memberof": "lib/utils/date_format.js~DateFormat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/date_format.js~DateFormat.format",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "date",
        "types": [
          "*"
        ]
      },
      {
        "name": "formatString",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "toTimepstampString",
    "memberof": "lib/utils/date_format.js~DateFormat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/date_format.js~DateFormat.toTimepstampString",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "date",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "file",
    "name": "lib/utils/debug.js",
    "content": "\nfunction getEmptyLogger(){ return (msg)=>{ /* ignore */ }; }\nfunction getPrefixedLogger(prefix){ return (msg)=>{ console.log(`[${prefix}] ${msg}`) }; }\n\nfunction Debug(){\n  console.log(...arguments);\n}\n\nDebug.getLogger = (name)=>{\n  if(Debug.loggers[name]) return Debug.loggers[name];\n\n  if(Debug.target.includes(name)){\n    return Debug.loggers[name] = getPrefixedLogger(name);\n  }else{\n    return Debug.loggers[name] = getEmptyLogger();\n  }\n}\nDebug.target  = (process.env[\"DEBUG_LOG\"] || \"\").split(\",\").map(v => v.trim()).filter(v => v);\nDebug.loggers = {};\n\nmodule.exports = Debug;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/utils/debug.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "function",
    "name": "getEmptyLogger",
    "memberof": "lib/utils/debug.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/debug.js~getEmptyLogger",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/utils/debug.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 397,
    "kind": "function",
    "name": "getPrefixedLogger",
    "memberof": "lib/utils/debug.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/debug.js~getPrefixedLogger",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/utils/debug.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "prefix",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 398,
    "kind": "function",
    "name": "Debug",
    "memberof": "lib/utils/debug.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/debug.js~Debug",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/utils/debug.js",
    "importStyle": "Debug",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "lib/utils/opt_parser.js",
    "content": "\nclass CommandLineOption {\n  constructor(optString){\n    this._option = optString;\n  }\n  option(removeHyphen = false){\n    if(removeHyphen){\n      return this._option.slice(this._option[1] == \"-\" ? 2 : 1);\n    }\n    return this._option;\n  }\n  setValue(val){ this._value = val }\n  getValueOrFail(){\n    if(this._value == undefined) throw new Error(\"CommandLine Argument [\" + this.option() + \"] is missing.\");\n    this.valueIsOption = true;\n    return this._value;\n  }\n}\n\nclass OptParser {\n  constructor(commandLineArgs){\n    this._commandLineOptions = [];\n    this._scriptArguments = [];\n    commandLineArgs.forEach((arg, i)=>{\n      if(arg[0] == \"-\"){\n        this._commandLineOptions.push(new CommandLineOption(arg));\n      }else{\n        if(i > 0 && commandLineArgs[i-1][0] == \"-\"){\n          let commandLineOption = this._commandLineOptions[this._commandLineOptions.length - 1];\n          commandLineOption.setValue(arg)\n          this._scriptArguments.push(commandLineOption);\n        }else{\n          this._scriptArguments.push(arg);\n        }\n      }\n    });\n  }\n  parse(callback){\n    return this._commandLineOptions.reduce((result, cmdOpt, index, array)=>{\n      callback(result, cmdOpt, index, array);\n      return result;\n    }, {});\n  }\n  scriptArguments(){\n    return this._scriptArguments.filter(v => !(v instanceof CommandLineOption && v.valueIsOption))\n    .map(v => (v instanceof CommandLineOption ? v._value : v))\n  }\n}\n\nmodule.exports = OptParser;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/utils/opt_parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "class",
    "name": "CommandLineOption",
    "memberof": "lib/utils/opt_parser.js",
    "static": true,
    "longname": "lib/utils/opt_parser.js~CommandLineOption",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/utils/opt_parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 401,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 402,
    "kind": "member",
    "name": "_option",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#_option",
    "access": "private",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "option",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#option",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "removeHyphen",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "setValue",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#setValue",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 405,
    "kind": "member",
    "name": "_value",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#_value",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "getValueOrFail",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#getValueOrFail",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "member",
    "name": "valueIsOption",
    "memberof": "lib/utils/opt_parser.js~CommandLineOption",
    "static": false,
    "longname": "lib/utils/opt_parser.js~CommandLineOption#valueIsOption",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "OptParser",
    "memberof": "lib/utils/opt_parser.js",
    "static": true,
    "longname": "lib/utils/opt_parser.js~OptParser",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/utils/opt_parser.js",
    "importStyle": "OptParser",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/utils/opt_parser.js~OptParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~OptParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "_commandLineOptions",
    "memberof": "lib/utils/opt_parser.js~OptParser",
    "static": false,
    "longname": "lib/utils/opt_parser.js~OptParser#_commandLineOptions",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "_scriptArguments",
    "memberof": "lib/utils/opt_parser.js~OptParser",
    "static": false,
    "longname": "lib/utils/opt_parser.js~OptParser#_scriptArguments",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "parse",
    "memberof": "lib/utils/opt_parser.js~OptParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~OptParser#parse",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "scriptArguments",
    "memberof": "lib/utils/opt_parser.js~OptParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/opt_parser.js~OptParser#scriptArguments",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "file",
    "name": "lib/walker/result_store.js",
    "content": "const fs = require(\"fs\");\nconst {promisify} = require('util');\nconst {config} = require(\"../utils/config\");\n\nclass ResultStore {\n  // ファイルから前回の結果をロードし、それを格納した配列で解決されるPromiseを返す\n  static loadPreviousResults(){\n    if(!fs.existsSync(config.successSaveFile))\n      return Promise.resolve([]);\n\n    return new Promise((resolve, reject)=>{\n      fs.readFile(config.successSaveFile, 'utf-8', (err, data)=>{ err ? reject(err) : resolve(data) })\n    })\n    .then((data)=>{\n      return data.split(\"\\n\")\n    })\n  }\n  // すべてのテストが成功した場合に、すべてのテストタイトルをファイルに書き出す\n  // ファイル書込みが終わると解決するPromiseを返す\n  static saveAll(suite){\n    return this.write(suite, []);\n  }\n  // 失敗したときに呼ばれる結果保存メソッド\n  // failtest までのテストを保存する\n  // ファイル書込みが終わると解決するPromiseを返す\n  static saveSucceeded(suite, failtest){\n    let noSucceeded = [];\n    let failedTitle = failtest.fullTitle().replace(/\"before each\" hook for \"(.+)\"/, \"$1\");\n    suite.eachTest((test)=>{\n      if(noSucceeded.length > 0 || test.fullTitle() == failedTitle){\n        noSucceeded.push(test.fullTitle());\n      }\n    });\n    if(noSucceeded.length > 0){\n      return this.write(suite, noSucceeded);\n    }\n  };\n\n  /**\n   * 引数で指定された noSucceeded 以外のテスト名をファイルに書き込む\n   * @private:\n   */\n  static write(suite, noSucceeded){\n    let succeededs = [];\n    suite.eachTest((test)=>{\n      if(noSucceeded.indexOf(test.fullTitle()) == -1)\n        succeededs.push(test.fullTitle())\n    })\n    return new Promise((resolve, reject)=>{\n      fs.writeFile(config.successSaveFile, succeededs.join(\"\\n\")+\"\\n\", (err)=>{\n        err ? reject(err) : resolve();\n      })\n    })\n  }\n}\n\nmodule.exports = ResultStore;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/walker/result_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 415,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/walker/result_store.js",
    "static": true,
    "longname": "lib/walker/result_store.js~fs",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/result_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "name": "promisify",
    "memberof": "lib/walker/result_store.js",
    "static": true,
    "longname": "lib/walker/result_store.js~promisify",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/result_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 417,
    "kind": "variable",
    "name": "config",
    "memberof": "lib/walker/result_store.js",
    "static": true,
    "longname": "lib/walker/result_store.js~config",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/result_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 418,
    "kind": "class",
    "name": "ResultStore",
    "memberof": "lib/walker/result_store.js",
    "static": true,
    "longname": "lib/walker/result_store.js~ResultStore",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/walker/result_store.js",
    "importStyle": "ResultStore",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 419,
    "kind": "method",
    "name": "loadPreviousResults",
    "memberof": "lib/walker/result_store.js~ResultStore",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/result_store.js~ResultStore.loadPreviousResults",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "method",
    "name": "saveAll",
    "memberof": "lib/walker/result_store.js~ResultStore",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/result_store.js~ResultStore.saveAll",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "suite",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "method",
    "name": "saveSucceeded",
    "memberof": "lib/walker/result_store.js~ResultStore",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/result_store.js~ResultStore.saveSucceeded",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "suite",
        "types": [
          "*"
        ]
      },
      {
        "name": "failtest",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "write",
    "memberof": "lib/walker/result_store.js~ResultStore",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/result_store.js~ResultStore.write",
    "access": "public",
    "description": "引数で指定された noSucceeded 以外のテスト名をファイルに書き込む\n@private:",
    "lineNumber": 43,
    "params": [
      {
        "name": "suite",
        "types": [
          "*"
        ]
      },
      {
        "name": "noSucceeded",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "lib/walker/walker.js",
    "content": "const Mocha = require('mocha');\nconst fs = require('fs');\nconst path = require('path');\nconst ResultStore = require(\"./result_store\");\n\nclass Walker {\n  constructor(config){\n    this.config = config;\n    this.mocha = new Mocha(config.mocha);\n\n    if(this.config.scenarioFile){\n      let scenarioFiles = Walker.toArray(this.config.scenarioFile);\n      scenarioFiles.sort().forEach((file)=>{ this.mocha.addFile(file) })\n    }else{\n      let scenarioDirs = Walker.toArray(this.config.scenarioDir);\n      let ignoreDirs = Walker.toArray(this.config.ignoreDir);\n      scenarioDirs.map(dir => path.join(process.cwd(), dir)).forEach((scenarioDir)=>{\n        if(!Walker.isDir(scenarioDir)){\n          throw `Scenario Directory(${scenarioDir}) is not found or not directory!`;\n        }\n        Walker.findAllFilesSync(scenarioDir, ignoreDirs)\n        .filter(file => file.substr(-3) === '.js')\n        .forEach((file)=>{ this.mocha.addFile(file) })\n      })\n    }\n    this.loadFiles();\n  }\n  loadFiles(){\n    let originalFunctions = {};\n    let delayedFunctions = [];\n    this.mocha.suite.on('pre-require', (context)=>{\n      originalFunctions.describe = context.describe;\n      originalFunctions.xdescribe = context.xdescribe;\n      originalFunctions.describeOnly = context.describe.only;\n      context.describe = function(title, fn, ...args){\n        delayedFunctions.push([\"describe\", this, title, fn, args]);\n      }\n      context.xdescribe = function(title, fn, ...args){\n        delayedFunctions.push([\"xdescribe\", this, title, fn, args]);\n      }\n      context.describe.only = function(title, fn, ...args){\n        delayedFunctions.push([\"describeOnly\", this, title, fn, args]);\n      }\n      // set to aliases\n      context.context = context.suite = context.describe;\n      context.xcontext = context.describe.skip = context.xdescribe;\n    })\n    this.mocha.suite.on('post-require', (context)=>{\n      // restore desctibe, xdescribe, describe.only with object property function support\n      // object property function support is describe(\"title\", { \"title\": function(){...} }, ...args)\n      [\"describe\", \"xdescribe\", \"describeOnly\"].forEach((key)=>{\n        originalFunctions[key] = Walker.objectPropertySupport(originalFunctions[key]);\n      })\n      context.context = context.suite = context.describe = originalFunctions.describe;\n      context.xcontext = context.xdescribe = originalFunctions.xdescribe;\n      context.describe.only = originalFunctions.describeOnly;\n      // hook function allows object property support.\n      [\"before\", \"after\", \"beforeEach\", \"afterEach\"].filter(key => context[key]).forEach((key)=>{\n        context[key] = Walker.objectPropertySupport(context[key]);\n      })\n    })\n    this.mocha.loadFiles();\n    delayedFunctions.forEach((array)=>{\n      let func = originalFunctions[array[0]];\n      func.call(array[1], array[2], array[3], ...array[4]); // this, title, fn, args\n    })\n  }\n  /**\n   * @private\n   */\n  static objectPropertySupport(originalFunc){\n    let newFunc = function(title, fn, ...args){\n      if(typeof title == \"function\"){\n        originalFunc.call(this, title);\n      }\n      if(typeof fn == \"function\"){\n        originalFunc.call(this, title, fn);\n      }\n      if(typeof fn == \"object\"){\n        if(typeof fn[title] != \"function\") throw new Error(`Property missing! \"${title}\" on object [${fn}]`)\n        originalFunc.call(this, title, ()=>{ return (fn[title])(...args) });\n      }\n    };\n    for(var prop in originalFunc){\n      if(originalFunc.hasOwnProperty(prop)) newFunc[prop] = originalFunc[prop];\n    }\n    return newFunc;\n  }\n  walk(callback){\n    Promise.resolve().then(()=>{\n      return this.config.startFromFirst ? [] : ResultStore.loadPreviousResults();\n    })\n    .then((succeeded)=>{\n      if(succeeded && succeeded.length > 0){\n        let regexp = succeeded.map(s => s.replace(/[()|]/g, \"\\\\$&\")).join(\"|\");\n        this.mocha.options.grep = new RegExp(\"^(\"+ regexp +\")$\");\n        this.mocha.options.invert = true;\n      }\n    })\n    .then(()=>{\n      let runner = this.mocha.run((failures)=>{\n        if(failures==0){\n          ResultStore.saveAll(this.mocha.suite).then(()=>{ callback(failures) })\n        }else{\n          callback(failures);\n        }\n      });\n      runner.on('fail', (failtest, error)=>{\n        ResultStore.saveSucceeded(this.mocha.suite, failtest);\n      })\n    })\n  }\n\n  static isDir(path){\n    let stat = fs.statSync(path);\n    return stat && stat.isDirectory();\n  }\n  static findAllFilesSync(dir, ignorePattern){\n    let results = [];\n    fs.readdirSync(dir)\n    .filter(file => !ignorePattern.includes(file))\n    .map(file => path.join(dir, file))\n    .forEach((file)=>{\n      if (this.isDir(file)){\n        results = results.concat(Walker.findAllFilesSync(file, ignorePattern))\n      }else{\n        results.push(file)\n      }\n    })\n    return results\n  }\n  static toArray(value){\n    return (value instanceof Array) ? value : [ value ];\n  }\n}\n\nmodule.exports = Walker;\n",
    "static": true,
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/lib/walker/walker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "variable",
    "name": "Mocha",
    "memberof": "lib/walker/walker.js",
    "static": true,
    "longname": "lib/walker/walker.js~Mocha",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "name": "fs",
    "memberof": "lib/walker/walker.js",
    "static": true,
    "longname": "lib/walker/walker.js~fs",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 426,
    "kind": "variable",
    "name": "path",
    "memberof": "lib/walker/walker.js",
    "static": true,
    "longname": "lib/walker/walker.js~path",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 427,
    "kind": "variable",
    "name": "ResultStore",
    "memberof": "lib/walker/walker.js",
    "static": true,
    "longname": "lib/walker/walker.js~ResultStore",
    "access": "public",
    "export": false,
    "importPath": "pagewalker/lib/walker/walker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 428,
    "kind": "class",
    "name": "Walker",
    "memberof": "lib/walker/walker.js",
    "static": true,
    "longname": "lib/walker/walker.js~Walker",
    "access": "public",
    "export": true,
    "importPath": "pagewalker/lib/walker/walker.js",
    "importStyle": "Walker",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 429,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/walker/walker.js~Walker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 430,
    "kind": "member",
    "name": "config",
    "memberof": "lib/walker/walker.js~Walker",
    "static": false,
    "longname": "lib/walker/walker.js~Walker#config",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "member",
    "name": "mocha",
    "memberof": "lib/walker/walker.js~Walker",
    "static": false,
    "longname": "lib/walker/walker.js~Walker#mocha",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "loadFiles",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/walker/walker.js~Walker#loadFiles",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "objectPropertySupport",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/walker.js~Walker.objectPropertySupport",
    "access": "private",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "name": "originalFunc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "walk",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/walker/walker.js~Walker#walk",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "isDir",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/walker.js~Walker.isDir",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "method",
    "name": "findAllFilesSync",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/walker.js~Walker.findAllFilesSync",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "dir",
        "types": [
          "*"
        ]
      },
      {
        "name": "ignorePattern",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "method",
    "name": "toArray",
    "memberof": "lib/walker/walker.js~Walker",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/walker/walker.js~Walker.toArray",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# pagewalker\n\nPagewalker is a framework for scripting a browser.\n\n## API Document\n\nhttps://xketanaka.github.io/pagewalker/\n",
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"pagewalker\",\n  \"version\": \"0.2.3\",\n  \"main\": \"index.js\",\n  \"bin\": \"bin/pagewalker\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/xketanaka/pagewalker.git\"\n  },\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"start\": \"electron .\",\n    \"debug\": \"DEBUG_LOG=query,app electron .\",\n    \"esdoc\": \"esdoc\"\n  },\n  \"esdoc\": {\n    \"source\": \"./lib\",\n    \"destination\": \"./docs\",\n    \"plugins\": [\n      {\n        \"name\": \"esdoc-standard-plugin\"\n      },\n      {\n        \"name\": \"esdoc-node\"\n      }\n    ]\n  },\n  \"dependencies\": {\n    \"mocha\": \"*\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"*\",\n    \"esdoc-node\": \"*\",\n    \"esdoc-standard-plugin\": \"*\"\n  },\n  \"optionalDependencies\": {\n    \"electron\": \"1.7.5\",\n    \"puppeteer\": \"^0.13.0\"\n  }\n}\n",
    "longname": "/Users/ketanaka/Toolspace/electron/pagewalker/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]